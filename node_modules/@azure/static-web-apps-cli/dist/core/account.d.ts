import { StaticSiteARMResource } from "@azure/arm-appservice";
import { GenericResourceExpanded } from "@azure/arm-resources";
import { Subscription } from "@azure/arm-subscriptions";
import { TokenCredential } from "@azure/identity";
export declare function authenticateWithAzureIdentity(details?: LoginDetails, useKeychain?: boolean, clearCache?: boolean): Promise<TokenCredential>;
export declare function chooseOrCreateProjectDetails(options: SWACLIConfig, credentialChain: TokenCredential, subscriptionId: string, shouldPrintToken: boolean | undefined): Promise<{
    resourceGroup: string;
    staticSiteName: string | undefined;
} | undefined>;
export declare function listTenants(credentialChain: TokenCredential): Promise<import("@azure/arm-subscriptions").TenantIdDescription[]>;
export declare function listResourceGroups(credentialChain: TokenCredential, subscriptionId: string): Promise<GenericResourceExpanded[]>;
export declare function listSubscriptions(credentialChain: TokenCredential): Promise<Subscription[]>;
export declare function listStaticSites(credentialChain: TokenCredential, subscriptionId: string, resourceGroup?: string): Promise<StaticSiteARMResource[]>;
export declare function getStaticSiteDeployment(credentialChain: TokenCredential, subscriptionId: string, resourceGroup: string, staticSiteName: string): Promise<import("@azure/arm-appservice").StringDictionary>;
//# sourceMappingURL=account.d.ts.map