{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/lroImpl.ts","../src/operations/deployments.ts","../src/operations/providers.ts","../src/operations/providerResourceTypes.ts","../src/operations/resources.ts","../src/operations/resourceGroups.ts","../src/operations/tagsOperations.ts","../src/operations/deploymentOperations.ts","../src/resourceManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of Microsoft.Resources operations. */\n  value?: Operation[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** Microsoft.Resources operation */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft.Resources */\n  provider?: string;\n  /** Resource on which the operation is performed: Profile, endpoint, etc. */\n  resource?: string;\n  /** Operation type: Read, write, delete, etc. */\n  operation?: string;\n  /** Description of the operation. */\n  description?: string;\n}\n\n/** An error response for a resource management request. */\nexport interface CloudError {\n  /** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */\n  error?: ErrorResponse;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.) */\nexport interface ErrorResponse {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorResponse[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** Deployment operation parameters. */\nexport interface Deployment {\n  /** The location to store the deployment data. */\n  location?: string;\n  /** The deployment properties. */\n  properties: DeploymentProperties;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment properties. */\nexport interface DeploymentProperties {\n  /** The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both. */\n  template?: Record<string, unknown>;\n  /** The URI of the template. Use either the templateLink property or the template property, but not both. */\n  templateLink?: TemplateLink;\n  /** Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string. */\n  parameters?: Record<string, unknown>;\n  /** The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both. */\n  parametersLink?: ParametersLink;\n  /** The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources. */\n  mode: DeploymentMode;\n  /** The debug setting of the deployment. */\n  debugSetting?: DebugSetting;\n  /** The deployment on error behavior. */\n  onErrorDeployment?: OnErrorDeployment;\n  /** Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer. */\n  expressionEvaluationOptions?: ExpressionEvaluationOptions;\n}\n\n/** Entity representing the reference to the template. */\nexport interface TemplateLink {\n  /** The URI of the template to deploy. Use either the uri or id property, but not both. */\n  uri?: string;\n  /** The resource id of a Template Spec. Use either the id or uri property, but not both. */\n  id?: string;\n  /** The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs */\n  relativePath?: string;\n  /** If included, must match the ContentVersion in the template. */\n  contentVersion?: string;\n  /** The query string (for example, a SAS token) to be used with the templateLink URI. */\n  queryString?: string;\n}\n\n/** Entity representing the reference to the deployment parameters. */\nexport interface ParametersLink {\n  /** The URI of the parameters file. */\n  uri: string;\n  /** If included, must match the ContentVersion in the template. */\n  contentVersion?: string;\n}\n\n/** The debug setting. */\nexport interface DebugSetting {\n  /** Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations. */\n  detailLevel?: string;\n}\n\n/** Deployment on error behavior. */\nexport interface OnErrorDeployment {\n  /** The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. */\n  type?: OnErrorDeploymentType;\n  /** The deployment to be used on error case. */\n  deploymentName?: string;\n}\n\n/** Specifies whether template expressions are evaluated within the scope of the parent template or nested template. */\nexport interface ExpressionEvaluationOptions {\n  /** The scope to be used for evaluation of parameters, variables and functions in a nested template. */\n  scope?: ExpressionEvaluationOptionsScopeType;\n}\n\n/** Deployment information. */\nexport interface DeploymentExtended {\n  /**\n   * The ID of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** the location of the deployment. */\n  location?: string;\n  /** Deployment properties. */\n  properties?: DeploymentPropertiesExtended;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment properties with additional details. */\nexport interface DeploymentPropertiesExtended {\n  /**\n   * Denotes the state of provisioning.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The correlation ID of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly correlationId?: string;\n  /**\n   * The timestamp of the template deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the template deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly duration?: string;\n  /**\n   * Key/value pairs that represent deployment output.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outputs?: Record<string, unknown>;\n  /**\n   * The list of resource providers needed for the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly providers?: Provider[];\n  /**\n   * The list of deployment dependencies.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dependencies?: Dependency[];\n  /**\n   * The URI referencing the template.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly templateLink?: TemplateLink;\n  /**\n   * Deployment parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: Record<string, unknown>;\n  /**\n   * The URI referencing the parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parametersLink?: ParametersLink;\n  /**\n   * The deployment mode. Possible values are Incremental and Complete.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mode?: DeploymentMode;\n  /**\n   * The debug setting of the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly debugSetting?: DebugSetting;\n  /**\n   * The deployment on error behavior.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly onErrorDeployment?: OnErrorDeploymentExtended;\n  /**\n   * The hash produced for the template.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly templateHash?: string;\n  /**\n   * Array of provisioned resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outputResources?: ResourceReference[];\n  /**\n   * Array of validated resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validatedResources?: ResourceReference[];\n  /**\n   * The deployment error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorResponse;\n}\n\n/** Resource provider information. */\nexport interface Provider {\n  /**\n   * The provider ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The namespace of the resource provider. */\n  namespace?: string;\n  /**\n   * The registration state of the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationState?: string;\n  /**\n   * The registration policy of the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registrationPolicy?: string;\n  /**\n   * The collection of provider resource types.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceTypes?: ProviderResourceType[];\n  /** The provider authorization consent state. */\n  providerAuthorizationConsentState?: ProviderAuthorizationConsentState;\n}\n\n/** Resource type managed by the resource provider. */\nexport interface ProviderResourceType {\n  /** The resource type. */\n  resourceType?: string;\n  /** The collection of locations where this resource type can be created. */\n  locations?: string[];\n  /** The location mappings that are supported by this resource type. */\n  locationMappings?: ProviderExtendedLocation[];\n  /** The aliases that are supported by this resource type. */\n  aliases?: Alias[];\n  /** The API version. */\n  apiVersions?: string[];\n  /**\n   * The default API version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultApiVersion?: string;\n  zoneMappings?: ZoneMapping[];\n  /**\n   * The API profiles for the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiProfiles?: ApiProfile[];\n  /** The additional capabilities offered by this resource type. */\n  capabilities?: string;\n  /** The properties. */\n  properties?: { [propertyName: string]: string };\n}\n\n/** The provider extended location. */\nexport interface ProviderExtendedLocation {\n  /** The azure location. */\n  location?: string;\n  /** The extended location type. */\n  type?: string;\n  /** The extended locations for the azure location. */\n  extendedLocations?: string[];\n}\n\n/** The alias type. */\nexport interface Alias {\n  /** The alias name. */\n  name?: string;\n  /** The paths for an alias. */\n  paths?: AliasPath[];\n  /** The type of the alias. */\n  type?: AliasType;\n  /** The default path for an alias. */\n  defaultPath?: string;\n  /** The default pattern for an alias. */\n  defaultPattern?: AliasPattern;\n  /**\n   * The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultMetadata?: AliasPathMetadata;\n}\n\n/** The type of the paths for alias. */\nexport interface AliasPath {\n  /** The path of an alias. */\n  path?: string;\n  /** The API versions. */\n  apiVersions?: string[];\n  /** The pattern for an alias path. */\n  pattern?: AliasPattern;\n  /**\n   * The metadata of the alias path. If missing, fall back to the default metadata of the alias.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadata?: AliasPathMetadata;\n}\n\n/** The type of the pattern for an alias path. */\nexport interface AliasPattern {\n  /** The alias pattern phrase. */\n  phrase?: string;\n  /** The alias pattern variable. */\n  variable?: string;\n  /** The type of alias pattern */\n  type?: AliasPatternType;\n}\n\nexport interface AliasPathMetadata {\n  /**\n   * The type of the token that the alias path is referring to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: AliasPathTokenType;\n  /**\n   * The attributes of the token that the alias path is referring to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly attributes?: AliasPathAttributes;\n}\n\nexport interface ZoneMapping {\n  /** The location of the zone mapping. */\n  location?: string;\n  zones?: string[];\n}\n\nexport interface ApiProfile {\n  /**\n   * The profile version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly profileVersion?: string;\n  /**\n   * The API version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiVersion?: string;\n}\n\n/** Deployment dependency information. */\nexport interface Dependency {\n  /** The list of dependencies. */\n  dependsOn?: BasicDependency[];\n  /** The ID of the dependency. */\n  id?: string;\n  /** The dependency resource type. */\n  resourceType?: string;\n  /** The dependency resource name. */\n  resourceName?: string;\n}\n\n/** Deployment dependency information. */\nexport interface BasicDependency {\n  /** The ID of the dependency. */\n  id?: string;\n  /** The dependency resource type. */\n  resourceType?: string;\n  /** The dependency resource name. */\n  resourceName?: string;\n}\n\n/** Deployment on error behavior with additional details. */\nexport interface OnErrorDeploymentExtended {\n  /**\n   * The state of the provisioning for the on error deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment. */\n  type?: OnErrorDeploymentType;\n  /** The deployment to be used on error case. */\n  deploymentName?: string;\n}\n\n/** The resource Id model. */\nexport interface ResourceReference {\n  /**\n   * The fully qualified resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** Information from validate template deployment response. */\nexport interface DeploymentValidateResult {\n  /**\n   * The deployment validation error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorResponse;\n  /** The template deployment properties. */\n  properties?: DeploymentPropertiesExtended;\n}\n\n/** The deployment export result. */\nexport interface DeploymentExportResult {\n  /** The template content. */\n  template?: Record<string, unknown>;\n}\n\n/** List of deployments. */\nexport interface DeploymentListResult {\n  /** An array of deployments. */\n  value?: DeploymentExtended[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Deployment operation parameters. */\nexport interface ScopedDeployment {\n  /** The location to store the deployment data. */\n  location: string;\n  /** The deployment properties. */\n  properties: DeploymentProperties;\n  /** Deployment tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Deployment What-if operation parameters. */\nexport interface ScopedDeploymentWhatIf {\n  /** The location to store the deployment data. */\n  location: string;\n  /** The deployment properties. */\n  properties: DeploymentWhatIfProperties;\n}\n\n/** Deployment What-If operation settings. */\nexport interface DeploymentWhatIfSettings {\n  /** The format of the What-If results */\n  resultFormat?: WhatIfResultFormat;\n}\n\n/** Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results. */\nexport interface WhatIfOperationResult {\n  /** Status of the What-If operation. */\n  status?: string;\n  /** Error when What-If operation fails. */\n  error?: ErrorResponse;\n  /** List of resource changes predicted by What-If operation. */\n  changes?: WhatIfChange[];\n}\n\n/** Information about a single resource change predicted by What-If operation. */\nexport interface WhatIfChange {\n  /** Resource ID */\n  resourceId: string;\n  /** Type of change that will be made to the resource when the deployment is executed. */\n  changeType: ChangeType;\n  /** The explanation about why the resource is unsupported by What-If. */\n  unsupportedReason?: string;\n  /** The snapshot of the resource before the deployment is executed. */\n  before?: Record<string, unknown>;\n  /** The predicted snapshot of the resource after the deployment is executed. */\n  after?: Record<string, unknown>;\n  /** The predicted changes to resource properties. */\n  delta?: WhatIfPropertyChange[];\n}\n\n/** The predicted change to the resource property. */\nexport interface WhatIfPropertyChange {\n  /** The path of the property. */\n  path: string;\n  /** The type of property change. */\n  propertyChangeType: PropertyChangeType;\n  /** The value of the property before the deployment is executed. */\n  before?: Record<string, unknown>;\n  /** The value of the property after the deployment is executed. */\n  after?: Record<string, unknown>;\n  /** Nested property changes. */\n  children?: WhatIfPropertyChange[];\n}\n\n/** Deployment What-if operation parameters. */\nexport interface DeploymentWhatIf {\n  /** The location to store the deployment data. */\n  location?: string;\n  /** The deployment properties. */\n  properties: DeploymentWhatIfProperties;\n}\n\n/** List of provider permissions. */\nexport interface ProviderPermissionListResult {\n  /** An array of provider permissions. */\n  value?: ProviderPermission[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The provider permission */\nexport interface ProviderPermission {\n  /** The application id. */\n  applicationId?: string;\n  /** Role definition properties. */\n  roleDefinition?: RoleDefinition;\n  /** Role definition properties. */\n  managedByRoleDefinition?: RoleDefinition;\n  /** The provider authorization consent state. */\n  providerAuthorizationConsentState?: ProviderAuthorizationConsentState;\n}\n\n/** Role definition properties. */\nexport interface RoleDefinition {\n  /** The role definition ID. */\n  id?: string;\n  /** The role definition name. */\n  name?: string;\n  /** If this is a service role. */\n  isServiceRole?: boolean;\n  /** Role definition permissions. */\n  permissions?: Permission[];\n  /** Role definition assignable scopes. */\n  scopes?: string[];\n}\n\n/** Role definition permissions. */\nexport interface Permission {\n  /** Allowed actions. */\n  actions?: string[];\n  /** Denied actions. */\n  notActions?: string[];\n  /** Allowed Data actions. */\n  dataActions?: string[];\n  /** Denied Data actions. */\n  notDataActions?: string[];\n}\n\n/** The provider registration definition. */\nexport interface ProviderRegistrationRequest {\n  /** The provider consent. */\n  thirdPartyProviderConsent?: ProviderConsentDefinition;\n}\n\n/** The provider consent. */\nexport interface ProviderConsentDefinition {\n  /** A value indicating whether authorization is consented or not. */\n  consentToAuthorization?: boolean;\n}\n\n/** List of resource providers. */\nexport interface ProviderListResult {\n  /** An array of resource providers. */\n  value?: Provider[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of resource types of a resource provider. */\nexport interface ProviderResourceTypeListResult {\n  /** An array of resource types. */\n  value?: ProviderResourceType[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of resource groups. */\nexport interface ResourceListResult {\n  /** An array of resources. */\n  value?: GenericResourceExpanded[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Plan for the resource. */\nexport interface Plan {\n  /** The plan ID. */\n  name?: string;\n  /** The publisher ID. */\n  publisher?: string;\n  /** The offer ID. */\n  product?: string;\n  /** The promotion code. */\n  promotionCode?: string;\n  /** The plan's version. */\n  version?: string;\n}\n\n/** SKU for the resource. */\nexport interface Sku {\n  /** The SKU name. */\n  name?: string;\n  /** The SKU tier. */\n  tier?: string;\n  /** The SKU size. */\n  size?: string;\n  /** The SKU family. */\n  family?: string;\n  /** The SKU model. */\n  model?: string;\n  /** The SKU capacity. */\n  capacity?: number;\n}\n\n/** Identity for the resource. */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The identity type. */\n  type?: ResourceIdentityType;\n  /** The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: {\n    [propertyName: string]: IdentityUserAssignedIdentitiesValue;\n  };\n}\n\nexport interface IdentityUserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Specified resource. */\nexport interface Resource {\n  /**\n   * Resource ID\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location */\n  location?: string;\n  /** Resource extended location. */\n  extendedLocation?: ExtendedLocation;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Resource extended location. */\nexport interface ExtendedLocation {\n  /** The extended location type. */\n  type?: ExtendedLocationType;\n  /** The extended location name. */\n  name?: string;\n}\n\n/** Resource group information. */\nexport interface ResourceGroup {\n  /**\n   * The ID of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The resource group properties. */\n  properties?: ResourceGroupProperties;\n  /** The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations. */\n  location: string;\n  /** The ID of the resource that manages this resource group. */\n  managedBy?: string;\n  /** The tags attached to the resource group. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The resource group properties. */\nexport interface ResourceGroupProperties {\n  /**\n   * The provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Resource group information. */\nexport interface ResourceGroupPatchable {\n  /** The name of the resource group. */\n  name?: string;\n  /** The resource group properties. */\n  properties?: ResourceGroupProperties;\n  /** The ID of the resource that manages this resource group. */\n  managedBy?: string;\n  /** The tags attached to the resource group. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Export resource group template request parameters. */\nexport interface ExportTemplateRequest {\n  /** The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'. */\n  resources?: string[];\n  /** The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization' */\n  options?: string;\n}\n\n/** Resource group export result. */\nexport interface ResourceGroupExportResult {\n  /** The template content. */\n  template?: Record<string, unknown>;\n  /** The template export error. */\n  error?: ErrorResponse;\n}\n\n/** List of resource groups. */\nexport interface ResourceGroupListResult {\n  /** An array of resource groups. */\n  value?: ResourceGroup[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Parameters of move resources. */\nexport interface ResourcesMoveInfo {\n  /** The IDs of the resources. */\n  resources?: string[];\n  /** The target resource group. */\n  targetResourceGroup?: string;\n}\n\n/** Tag information. */\nexport interface TagValue {\n  /**\n   * The tag value ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The tag value. */\n  tagValue?: string;\n  /** The tag value count. */\n  count?: TagCount;\n}\n\n/** Tag count. */\nexport interface TagCount {\n  /** Type of count. */\n  type?: string;\n  /** Value of count. */\n  value?: number;\n}\n\n/** Tag details. */\nexport interface TagDetails {\n  /**\n   * The tag name ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The tag name. */\n  tagName?: string;\n  /** The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0. */\n  count?: TagCount;\n  /** The list of tag values. */\n  values?: TagValue[];\n}\n\n/** List of subscription tags. */\nexport interface TagsListResult {\n  /** An array of tags. */\n  value?: TagDetails[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Deployment operation information. */\nexport interface DeploymentOperation {\n  /**\n   * Full deployment operation ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Deployment operation ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationId?: string;\n  /** Deployment properties. */\n  properties?: DeploymentOperationProperties;\n}\n\n/** Deployment operation properties. */\nexport interface DeploymentOperationProperties {\n  /**\n   * The name of the current provisioning operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningOperation?: ProvisioningOperation;\n  /**\n   * The state of the provisioning.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The date and time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly duration?: string;\n  /**\n   * Deployment operation service request id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceRequestId?: string;\n  /**\n   * Operation status code from the resource provider. This property may not be set if a response has not yet been received.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusCode?: string;\n  /**\n   * Operation status message from the resource provider. This property is optional.  It will only be provided if an error was received from the resource provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusMessage?: StatusMessage;\n  /**\n   * The target resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetResource?: TargetResource;\n  /**\n   * The HTTP request message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly request?: HttpMessage;\n  /**\n   * The HTTP response message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly response?: HttpMessage;\n}\n\n/** Operation status message object. */\nexport interface StatusMessage {\n  /** Status of the deployment operation. */\n  status?: string;\n  /** The error reported by the operation. */\n  error?: ErrorResponse;\n}\n\n/** Target resource. */\nexport interface TargetResource {\n  /** The ID of the resource. */\n  id?: string;\n  /** The name of the resource. */\n  resourceName?: string;\n  /** The type of the resource. */\n  resourceType?: string;\n}\n\n/** HTTP message. */\nexport interface HttpMessage {\n  /** HTTP message content. */\n  content?: Record<string, unknown>;\n}\n\n/** List of deployment operations. */\nexport interface DeploymentOperationsListResult {\n  /** An array of deployment operations. */\n  value?: DeploymentOperation[];\n  /**\n   * The URL to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of the request to calculate template hash. It contains a string of minified template and its hash. */\nexport interface TemplateHashResult {\n  /** The minified template string. */\n  minifiedTemplate?: string;\n  /** The template hash. */\n  templateHash?: string;\n}\n\n/** Wrapper resource for tags API requests and responses. */\nexport interface TagsResource {\n  /**\n   * The ID of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the tags wrapper resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The set of tags. */\n  properties: Tags;\n}\n\n/** A dictionary of name and value pairs. */\nexport interface Tags {\n  /** Dictionary of <string> */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Wrapper resource for tags patch API request only. */\nexport interface TagsPatchResource {\n  /** The operation type for the patch API. */\n  operation?: TagsPatchOperation;\n  /** The set of tags. */\n  properties?: Tags;\n}\n\n/** Deployment filter. */\nexport interface DeploymentExtendedFilter {\n  /** The provisioning state. */\n  provisioningState?: string;\n}\n\n/** Resource filter. */\nexport interface GenericResourceFilter {\n  /** The resource type. */\n  resourceType?: string;\n  /** The tag name. */\n  tagname?: string;\n  /** The tag value. */\n  tagvalue?: string;\n}\n\n/** Resource group filter. */\nexport interface ResourceGroupFilter {\n  /** The tag name. */\n  tagName?: string;\n  /** The tag value. */\n  tagValue?: string;\n}\n\n/** Resource provider operation's display properties. */\nexport interface ResourceProviderOperationDisplayProperties {\n  /** Operation description. */\n  publisher?: string;\n  /** Operation provider. */\n  provider?: string;\n  /** Operation resource. */\n  resource?: string;\n  /** Resource provider operation. */\n  operation?: string;\n  /** Operation description. */\n  description?: string;\n}\n\n/** Sub-resource. */\nexport interface SubResource {\n  /** Resource ID */\n  id?: string;\n}\n\n/** Deployment What-if properties. */\nexport interface DeploymentWhatIfProperties extends DeploymentProperties {\n  /** Optional What-If operation settings. */\n  whatIfSettings?: DeploymentWhatIfSettings;\n}\n\n/** Resource information. */\nexport interface GenericResource extends Resource {\n  /** The plan of the resource. */\n  plan?: Plan;\n  /** The resource properties. */\n  properties?: Record<string, unknown>;\n  /** The kind of the resource. */\n  kind?: string;\n  /** ID of the resource that manages this resource. */\n  managedBy?: string;\n  /** The SKU of the resource. */\n  sku?: Sku;\n  /** The identity of the resource. */\n  identity?: Identity;\n}\n\n/** Resource information. */\nexport interface GenericResourceExpanded extends GenericResource {\n  /**\n   * The created time of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdTime?: Date;\n  /**\n   * The changed time of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changedTime?: Date;\n  /**\n   * The provisioning state of the resource. This is only present if requested via the $expand query parameter.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtTenantScope operation. */\nexport interface DeploymentsWhatIfAtTenantScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtManagementGroupScope operation. */\nexport interface DeploymentsWhatIfAtManagementGroupScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIfAtSubscriptionScope operation. */\nexport interface DeploymentsWhatIfAtSubscriptionScopeHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Defines headers for Deployments_whatIf operation. */\nexport interface DeploymentsWhatIfHeaders {\n  /** URL to get status of this long-running operation. */\n  location?: string;\n  /** Number of seconds to wait before polling for status. */\n  retryAfter?: string;\n}\n\n/** Known values of {@link ExpressionEvaluationOptionsScopeType} that the service accepts. */\nexport enum KnownExpressionEvaluationOptionsScopeType {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Outer */\n  Outer = \"Outer\",\n  /** Inner */\n  Inner = \"Inner\"\n}\n\n/**\n * Defines values for ExpressionEvaluationOptionsScopeType. \\\n * {@link KnownExpressionEvaluationOptionsScopeType} can be used interchangeably with ExpressionEvaluationOptionsScopeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Outer** \\\n * **Inner**\n */\nexport type ExpressionEvaluationOptionsScopeType = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Running */\n  Running = \"Running\",\n  /** Ready */\n  Ready = \"Ready\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Created */\n  Created = \"Created\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Updating */\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Accepted** \\\n * **Running** \\\n * **Ready** \\\n * **Creating** \\\n * **Created** \\\n * **Deleting** \\\n * **Deleted** \\\n * **Canceled** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Updating**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link AliasPathTokenType} that the service accepts. */\nexport enum KnownAliasPathTokenType {\n  /** The token type is not specified. */\n  NotSpecified = \"NotSpecified\",\n  /** The token type can be anything. */\n  Any = \"Any\",\n  /** The token type is string. */\n  String = \"String\",\n  /** The token type is object. */\n  Object = \"Object\",\n  /** The token type is array. */\n  Array = \"Array\",\n  /** The token type is integer. */\n  Integer = \"Integer\",\n  /** The token type is number. */\n  Number = \"Number\",\n  /** The token type is boolean. */\n  Boolean = \"Boolean\"\n}\n\n/**\n * Defines values for AliasPathTokenType. \\\n * {@link KnownAliasPathTokenType} can be used interchangeably with AliasPathTokenType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified**: The token type is not specified. \\\n * **Any**: The token type can be anything. \\\n * **String**: The token type is string. \\\n * **Object**: The token type is object. \\\n * **Array**: The token type is array. \\\n * **Integer**: The token type is integer. \\\n * **Number**: The token type is number. \\\n * **Boolean**: The token type is boolean.\n */\nexport type AliasPathTokenType = string;\n\n/** Known values of {@link AliasPathAttributes} that the service accepts. */\nexport enum KnownAliasPathAttributes {\n  /** The token that the alias path is referring to has no attributes. */\n  None = \"None\",\n  /** The token that the alias path is referring to is modifiable by policies with 'modify' effect. */\n  Modifiable = \"Modifiable\"\n}\n\n/**\n * Defines values for AliasPathAttributes. \\\n * {@link KnownAliasPathAttributes} can be used interchangeably with AliasPathAttributes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**: The token that the alias path is referring to has no attributes. \\\n * **Modifiable**: The token that the alias path is referring to is modifiable by policies with 'modify' effect.\n */\nexport type AliasPathAttributes = string;\n\n/** Known values of {@link ProviderAuthorizationConsentState} that the service accepts. */\nexport enum KnownProviderAuthorizationConsentState {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Required */\n  Required = \"Required\",\n  /** NotRequired */\n  NotRequired = \"NotRequired\",\n  /** Consented */\n  Consented = \"Consented\"\n}\n\n/**\n * Defines values for ProviderAuthorizationConsentState. \\\n * {@link KnownProviderAuthorizationConsentState} can be used interchangeably with ProviderAuthorizationConsentState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **Required** \\\n * **NotRequired** \\\n * **Consented**\n */\nexport type ProviderAuthorizationConsentState = string;\n\n/** Known values of {@link ExtendedLocationType} that the service accepts. */\nexport enum KnownExtendedLocationType {\n  /** EdgeZone */\n  EdgeZone = \"EdgeZone\"\n}\n\n/**\n * Defines values for ExtendedLocationType. \\\n * {@link KnownExtendedLocationType} can be used interchangeably with ExtendedLocationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationType = string;\n\n/** Known values of {@link TagsPatchOperation} that the service accepts. */\nexport enum KnownTagsPatchOperation {\n  /** The 'replace' option replaces the entire set of existing tags with a new set. */\n  Replace = \"Replace\",\n  /** The 'merge' option allows adding tags with new names and updating the values of tags with existing names. */\n  Merge = \"Merge\",\n  /** The 'delete' option allows selectively deleting tags based on given names or name\\/value pairs. */\n  Delete = \"Delete\"\n}\n\n/**\n * Defines values for TagsPatchOperation. \\\n * {@link KnownTagsPatchOperation} can be used interchangeably with TagsPatchOperation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Replace**: The 'replace' option replaces the entire set of existing tags with a new set. \\\n * **Merge**: The 'merge' option allows adding tags with new names and updating the values of tags with existing names. \\\n * **Delete**: The 'delete' option allows selectively deleting tags based on given names or name\\/value pairs.\n */\nexport type TagsPatchOperation = string;\n/** Defines values for DeploymentMode. */\nexport type DeploymentMode = \"Incremental\" | \"Complete\";\n/** Defines values for OnErrorDeploymentType. */\nexport type OnErrorDeploymentType = \"LastSuccessful\" | \"SpecificDeployment\";\n/** Defines values for AliasPatternType. */\nexport type AliasPatternType = \"NotSpecified\" | \"Extract\";\n/** Defines values for AliasType. */\nexport type AliasType = \"NotSpecified\" | \"PlainText\" | \"Mask\";\n/** Defines values for WhatIfResultFormat. */\nexport type WhatIfResultFormat = \"ResourceIdOnly\" | \"FullResourcePayloads\";\n/** Defines values for ChangeType. */\nexport type ChangeType =\n  | \"Create\"\n  | \"Delete\"\n  | \"Ignore\"\n  | \"Deploy\"\n  | \"NoChange\"\n  | \"Modify\"\n  | \"Unsupported\";\n/** Defines values for PropertyChangeType. */\nexport type PropertyChangeType =\n  | \"Create\"\n  | \"Delete\"\n  | \"Modify\"\n  | \"Array\"\n  | \"NoEffect\";\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"UserAssigned\"\n  | \"SystemAssigned, UserAssigned\"\n  | \"None\";\n/** Defines values for ProvisioningOperation. */\nexport type ProvisioningOperation =\n  | \"NotSpecified\"\n  | \"Create\"\n  | \"Delete\"\n  | \"Waiting\"\n  | \"AzureAsyncOperationWaiting\"\n  | \"ResourceCacheWaiting\"\n  | \"Action\"\n  | \"Read\"\n  | \"EvaluateDeploymentOutput\"\n  | \"DeploymentCleanup\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtScope operation. */\nexport type DeploymentsCheckExistenceAtScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtScope operation. */\nexport type DeploymentsCreateOrUpdateAtScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type DeploymentsGetAtScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtScope operation. */\nexport type DeploymentsValidateAtScopeResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtScope operation. */\nexport type DeploymentsExportTemplateAtScopeResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtScope operation. */\nexport type DeploymentsListAtScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtTenantScope operation. */\nexport type DeploymentsCheckExistenceAtTenantScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtTenantScope operation. */\nexport type DeploymentsCreateOrUpdateAtTenantScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type DeploymentsGetAtTenantScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtTenantScope operation. */\nexport type DeploymentsValidateAtTenantScopeResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtTenantScope operation. */\nexport type DeploymentsWhatIfAtTenantScopeResponse = WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtTenantScope operation. */\nexport type DeploymentsExportTemplateAtTenantScopeResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type DeploymentsListAtTenantScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtManagementGroupScope operation. */\nexport type DeploymentsCheckExistenceAtManagementGroupScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtManagementGroupScope operation. */\nexport type DeploymentsCreateOrUpdateAtManagementGroupScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtManagementGroupScope operation. */\nexport type DeploymentsGetAtManagementGroupScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtManagementGroupScope operation. */\nexport type DeploymentsValidateAtManagementGroupScopeResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtManagementGroupScope operation. */\nexport type DeploymentsWhatIfAtManagementGroupScopeResponse = WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtManagementGroupScope operation. */\nexport type DeploymentsExportTemplateAtManagementGroupScopeResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtManagementGroupScope operation. */\nexport type DeploymentsListAtManagementGroupScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceAtSubscriptionScope operation. */\nexport type DeploymentsCheckExistenceAtSubscriptionScopeResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtSubscriptionScope operation. */\nexport type DeploymentsCreateOrUpdateAtSubscriptionScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtSubscriptionScope operation. */\nexport type DeploymentsGetAtSubscriptionScopeResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validateAtSubscriptionScope operation. */\nexport type DeploymentsValidateAtSubscriptionScopeResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIfAtSubscriptionScope operation. */\nexport type DeploymentsWhatIfAtSubscriptionScopeResponse = WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplateAtSubscriptionScope operation. */\nexport type DeploymentsExportTemplateAtSubscriptionScopeResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listAtSubscriptionScope operation. */\nexport type DeploymentsListAtSubscriptionScopeResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type DeploymentsCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DeploymentsCreateOrUpdateResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeploymentsGetResponse = DeploymentExtended;\n\n/** Optional parameters. */\nexport interface DeploymentsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DeploymentsValidateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validate operation. */\nexport type DeploymentsValidateResponse = DeploymentValidateResult;\n\n/** Optional parameters. */\nexport interface DeploymentsWhatIfOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the whatIf operation. */\nexport type DeploymentsWhatIfResponse = WhatIfOperationResult;\n\n/** Optional parameters. */\nexport interface DeploymentsExportTemplateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the exportTemplate operation. */\nexport type DeploymentsExportTemplateResponse = DeploymentExportResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'. */\n  filter?: string;\n  /** The number of results to get. If null is passed, returns all deployments. */\n  top?: number;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DeploymentsListByResourceGroupResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsCalculateTemplateHashOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the calculateTemplateHash operation. */\nexport type DeploymentsCalculateTemplateHashResponse = TemplateHashResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtScopeNext operation. */\nexport type DeploymentsListAtScopeNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type DeploymentsListAtTenantScopeNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtManagementGroupScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtManagementGroupScopeNext operation. */\nexport type DeploymentsListAtManagementGroupScopeNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListAtSubscriptionScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtSubscriptionScopeNext operation. */\nexport type DeploymentsListAtSubscriptionScopeNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface DeploymentsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DeploymentsListByResourceGroupNextResponse = DeploymentListResult;\n\n/** Optional parameters. */\nexport interface ProvidersUnregisterOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the unregister operation. */\nexport type ProvidersUnregisterResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersRegisterAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ProvidersProviderPermissionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the providerPermissions operation. */\nexport type ProvidersProviderPermissionsResponse = ProviderPermissionListResult;\n\n/** Optional parameters. */\nexport interface ProvidersRegisterOptionalParams\n  extends coreClient.OperationOptions {\n  /** The third party consent for S2S. */\n  properties?: ProviderRegistrationRequest;\n}\n\n/** Contains response data for the register operation. */\nexport type ProvidersRegisterResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProvidersListResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type ProvidersListAtTenantScopeResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ProvidersGetResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type ProvidersGetAtTenantScopeResponse = Provider;\n\n/** Optional parameters. */\nexport interface ProvidersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ProvidersListNextResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProvidersListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type ProvidersListAtTenantScopeNextResponse = ProviderListResult;\n\n/** Optional parameters. */\nexport interface ProviderResourceTypesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProviderResourceTypesListResponse = ProviderResourceTypeListResult;\n\n/** Optional parameters. */\nexport interface ResourcesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resources. */\n  top?: number;\n  /** Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ResourcesListByResourceGroupResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesMoveResourcesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesValidateMoveResourcesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>Filter comparison operators include `eq` (equals) and `ne` (not equals) and may be used with the following properties: `location`, `resourceType`, `name`, `resourceGroup`, `identity`, `identity/principalId`, `plan`, `plan/publisher`, `plan/product`, `plan/name`, `plan/version`, and `plan/promotionCode`.<br><br>For example, to filter by a resource type, use `$filter=resourceType eq 'Microsoft.Network/virtualNetworks'`<br><br><br>`substringof(value, property)` can  be used to filter for substrings of the following currently-supported properties: `name` and `resourceGroup`<br><br>For example, to get all resources with 'demo' anywhere in the resource name, use `$filter=substringof('demo', name)`<br><br>Multiple substring operations can also be combined using `and`/`or` operators.<br><br>Note that any truncated number of results queried via `$top` may also not be compatible when using a filter.<br><br><br>Resources can be filtered by tag names and values. For example, to filter for a tag name and value, use `$filter=tagName eq 'tag1' and tagValue eq 'Value1'`. Note that when resources are filtered by tag name and value, <b>the original tags for each resource will not be returned in the results.</b> Any list of additional properties queried via `$expand` may also not be compatible when filtering by tag names/values. <br><br>For tag names only, resources can be filtered by prefix using the following syntax: `$filter=startswith(tagName, 'depart')`. This query will return all resources with a tag name prefixed by the phrase `depart` (i.e.`department`, `departureDate`, `departureTime`, etc.)<br><br><br>Note that some properties can be combined when filtering resources, which include the following: `substringof() and/or resourceType`, `plan and plan/publisher and plan/name`, and `identity and identity/principalId`. */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resources. */\n  top?: number;\n  /** Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourcesListResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type ResourcesCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourcesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ResourcesCreateOrUpdateResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ResourcesUpdateResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ResourcesGetResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesCheckExistenceByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistenceById operation. */\nexport type ResourcesCheckExistenceByIdResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourcesDeleteByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourcesCreateOrUpdateByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateById operation. */\nexport type ResourcesCreateOrUpdateByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesUpdateByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateById operation. */\nexport type ResourcesUpdateByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesGetByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getById operation. */\nexport type ResourcesGetByIdResponse = GenericResource;\n\n/** Optional parameters. */\nexport interface ResourcesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ResourcesListByResourceGroupNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourcesListNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsCheckExistenceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkExistence operation. */\nexport type ResourceGroupsCheckExistenceResponse = {\n  body: boolean;\n};\n\n/** Optional parameters. */\nexport interface ResourceGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ResourceGroupsCreateOrUpdateResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** The resource types you want to force delete. Currently, only the following is supported: forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets */\n  forceDeletionTypes?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ResourceGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ResourceGroupsGetResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ResourceGroupsUpdateResponse = ResourceGroup;\n\n/** Optional parameters. */\nexport interface ResourceGroupsExportTemplateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the exportTemplate operation. */\nexport type ResourceGroupsExportTemplateResponse = ResourceGroupExportResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1' */\n  filter?: string;\n  /** The number of results to return. If null is passed, returns all resource groups. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourceGroupsListResponse = ResourceGroupListResult;\n\n/** Optional parameters. */\nexport interface ResourceGroupsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ResourceGroupsListNextResponse = ResourceGroupListResult;\n\n/** Optional parameters. */\nexport interface TagsDeleteValueOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateValueOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateValue operation. */\nexport type TagsCreateOrUpdateValueResponse = TagValue;\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type TagsCreateOrUpdateResponse = TagDetails;\n\n/** Optional parameters. */\nexport interface TagsDeleteOptionalParams extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TagsListResponse = TagsListResult;\n\n/** Optional parameters. */\nexport interface TagsCreateOrUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateAtScope operation. */\nexport type TagsCreateOrUpdateAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsUpdateAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateAtScope operation. */\nexport type TagsUpdateAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type TagsGetAtScopeResponse = TagsResource;\n\n/** Optional parameters. */\nexport interface TagsDeleteAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TagsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type TagsListNextResponse = TagsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtScope operation. */\nexport type DeploymentOperationsGetAtScopeResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtScope operation. */\nexport type DeploymentOperationsListAtScopeResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtTenantScope operation. */\nexport type DeploymentOperationsGetAtTenantScopeResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtTenantScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtTenantScope operation. */\nexport type DeploymentOperationsListAtTenantScopeResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtManagementGroupScope operation. */\nexport type DeploymentOperationsGetAtManagementGroupScopeResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtManagementGroupScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtManagementGroupScope operation. */\nexport type DeploymentOperationsListAtManagementGroupScopeResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtSubscriptionScope operation. */\nexport type DeploymentOperationsGetAtSubscriptionScopeResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listAtSubscriptionScope operation. */\nexport type DeploymentOperationsListAtSubscriptionScopeResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeploymentOperationsGetResponse = DeploymentOperation;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type DeploymentOperationsListResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtScopeNext operation. */\nexport type DeploymentOperationsListAtScopeNextResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtTenantScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtTenantScopeNext operation. */\nexport type DeploymentOperationsListAtTenantScopeNextResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtManagementGroupScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtManagementGroupScopeNext operation. */\nexport type DeploymentOperationsListAtManagementGroupScopeNextResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListAtSubscriptionScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAtSubscriptionScopeNext operation. */\nexport type DeploymentOperationsListAtSubscriptionScopeNextResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface DeploymentOperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DeploymentOperationsListNextResponse = DeploymentOperationsListResult;\n\n/** Optional parameters. */\nexport interface ResourceManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Deployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Deployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentProperties\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\"\n        }\n      },\n      mode: {\n        serializedName: \"mode\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"]\n        }\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\"\n        }\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeployment\"\n        }\n      },\n      expressionEvaluationOptions: {\n        serializedName: \"expressionEvaluationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpressionEvaluationOptions\"\n        }\n      }\n    }\n  }\n};\n\nexport const TemplateLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TemplateLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryString: {\n        serializedName: \"queryString\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParametersLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParametersLink\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DebugSetting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DebugSetting\",\n    modelProperties: {\n      detailLevel: {\n        serializedName: \"detailLevel\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnErrorDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeployment\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"]\n        }\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExpressionEvaluationOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpressionEvaluationOptions\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtended\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentPropertiesExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentPropertiesExtended\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      correlationId: {\n        serializedName: \"correlationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      providers: {\n        serializedName: \"providers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\"\n            }\n          }\n        }\n      },\n      dependencies: {\n        serializedName: \"dependencies\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Dependency\"\n            }\n          }\n        }\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\"\n        }\n      },\n      mode: {\n        serializedName: \"mode\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Incremental\", \"Complete\"]\n        }\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\"\n        }\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeploymentExtended\"\n        }\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outputResources: {\n        serializedName: \"outputResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      validatedResources: {\n        serializedName: \"validatedResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceReference\"\n            }\n          }\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const Provider: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Provider\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      namespace: {\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationState: {\n        serializedName: \"registrationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationPolicy: {\n        serializedName: \"registrationPolicy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\"\n            }\n          }\n        }\n      },\n      providerAuthorizationConsentState: {\n        serializedName: \"providerAuthorizationConsentState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderResourceType: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceType\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationMappings: {\n        serializedName: \"locationMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderExtendedLocation\"\n            }\n          }\n        }\n      },\n      aliases: {\n        serializedName: \"aliases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Alias\"\n            }\n          }\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      defaultApiVersion: {\n        serializedName: \"defaultApiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zoneMappings: {\n        serializedName: \"zoneMappings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ZoneMapping\"\n            }\n          }\n        }\n      },\n      apiProfiles: {\n        serializedName: \"apiProfiles\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiProfile\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderExtendedLocation\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedLocations: {\n        serializedName: \"extendedLocations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Alias: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Alias\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      paths: {\n        serializedName: \"paths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AliasPath\"\n            }\n          }\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"PlainText\", \"Mask\"]\n        }\n      },\n      defaultPath: {\n        serializedName: \"defaultPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultPattern: {\n        serializedName: \"defaultPattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\"\n        }\n      },\n      defaultMetadata: {\n        serializedName: \"defaultMetadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\"\n        }\n      }\n    }\n  }\n};\n\nexport const AliasPath: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPath\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      pattern: {\n        serializedName: \"pattern\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPattern\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Composite\",\n          className: \"AliasPathMetadata\"\n        }\n      }\n    }\n  }\n};\n\nexport const AliasPattern: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPattern\",\n    modelProperties: {\n      phrase: {\n        serializedName: \"phrase\",\n        type: {\n          name: \"String\"\n        }\n      },\n      variable: {\n        serializedName: \"variable\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NotSpecified\", \"Extract\"]\n        }\n      }\n    }\n  }\n};\n\nexport const AliasPathMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AliasPathMetadata\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      attributes: {\n        serializedName: \"attributes\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ZoneMapping: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ZoneMapping\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ApiProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiProfile\",\n    modelProperties: {\n      profileVersion: {\n        serializedName: \"profileVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Dependency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Dependency\",\n    modelProperties: {\n      dependsOn: {\n        serializedName: \"dependsOn\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BasicDependency\"\n            }\n          }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BasicDependency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BasicDependency\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnErrorDeploymentExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeploymentExtended\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"LastSuccessful\", \"SpecificDeployment\"]\n        }\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentValidateResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentValidateResult\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentExportResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtended\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScopedDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ScopedDeploymentWhatIf: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopedDeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentWhatIfSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfSettings\",\n    modelProperties: {\n      resultFormat: {\n        serializedName: \"resultFormat\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ResourceIdOnly\", \"FullResourcePayloads\"]\n        }\n      }\n    }\n  }\n};\n\nexport const WhatIfOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfOperationResult\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      },\n      changes: {\n        serializedName: \"properties.changes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfChange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WhatIfChange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfChange\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      changeType: {\n        serializedName: \"changeType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Create\",\n            \"Delete\",\n            \"Ignore\",\n            \"Deploy\",\n            \"NoChange\",\n            \"Modify\",\n            \"Unsupported\"\n          ]\n        }\n      },\n      unsupportedReason: {\n        serializedName: \"unsupportedReason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      delta: {\n        serializedName: \"delta\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WhatIfPropertyChange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WhatIfPropertyChange\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      propertyChangeType: {\n        serializedName: \"propertyChangeType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Create\", \"Delete\", \"Modify\", \"Array\", \"NoEffect\"]\n        }\n      },\n      before: {\n        serializedName: \"before\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      after: {\n        serializedName: \"after\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      children: {\n        serializedName: \"children\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WhatIfPropertyChange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentWhatIf: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIf\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderPermissionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderPermissionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderPermission\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderPermission: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderPermission\",\n    modelProperties: {\n      applicationId: {\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinition: {\n        serializedName: \"roleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleDefinition\"\n        }\n      },\n      managedByRoleDefinition: {\n        serializedName: \"managedByRoleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleDefinition\"\n        }\n      },\n      providerAuthorizationConsentState: {\n        serializedName: \"providerAuthorizationConsentState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isServiceRole: {\n        serializedName: \"isServiceRole\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      permissions: {\n        serializedName: \"permissions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Permission\"\n            }\n          }\n        }\n      },\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Permission: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Permission\",\n    modelProperties: {\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notActions: {\n        serializedName: \"notActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      dataActions: {\n        serializedName: \"dataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notDataActions: {\n        serializedName: \"notDataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderRegistrationRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderRegistrationRequest\",\n    modelProperties: {\n      thirdPartyProviderConsent: {\n        serializedName: \"thirdPartyProviderConsent\",\n        type: {\n          name: \"Composite\",\n          className: \"ProviderConsentDefinition\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderConsentDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderConsentDefinition\",\n    modelProperties: {\n      consentToAuthorization: {\n        serializedName: \"consentToAuthorization\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderResourceTypeListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceTypeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GenericResourceExpanded\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Plan: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Plan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\"\n        }\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned, UserAssigned\",\n            \"None\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"IdentityUserAssignedIdentitiesValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IdentityUserAssignedIdentitiesValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IdentityUserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedLocation\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroup\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupPatchable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupPatchable\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ExportTemplateRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportTemplateRequest\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupExportResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourcesMoveInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesMoveInfo\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetResourceGroup: {\n        serializedName: \"targetResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagValue\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagCount\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagDetails\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TagsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagDetails\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationId: {\n        serializedName: \"operationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentOperationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationProperties\",\n    modelProperties: {\n      provisioningOperation: {\n        serializedName: \"provisioningOperation\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"NotSpecified\",\n            \"Create\",\n            \"Delete\",\n            \"Waiting\",\n            \"AzureAsyncOperationWaiting\",\n            \"ResourceCacheWaiting\",\n            \"Action\",\n            \"Read\",\n            \"EvaluateDeploymentOutput\",\n            \"DeploymentCleanup\"\n          ]\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceRequestId: {\n        serializedName: \"serviceRequestId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusCode: {\n        serializedName: \"statusCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMessage\"\n        }\n      },\n      targetResource: {\n        serializedName: \"targetResource\",\n        type: {\n          name: \"Composite\",\n          className: \"TargetResource\"\n        }\n      },\n      request: {\n        serializedName: \"request\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\"\n        }\n      }\n    }\n  }\n};\n\nexport const StatusMessage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusMessage\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const TargetResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TargetResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HttpMessage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpMessage\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperationsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TemplateHashResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TemplateHashResult\",\n    modelProperties: {\n      minifiedTemplate: {\n        serializedName: \"minifiedTemplate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      templateHash: {\n        serializedName: \"templateHash\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagsResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\"\n        }\n      }\n    }\n  }\n};\n\nexport const Tags: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tags\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const TagsPatchResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagsPatchResource\",\n    modelProperties: {\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Tags\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentExtendedFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtendedFilter\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenericResourceFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceFilter\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagname: {\n        serializedName: \"tagname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagvalue: {\n        serializedName: \"tagvalue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupFilter\",\n    modelProperties: {\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceProviderOperationDisplayProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceProviderOperationDisplayProperties\",\n    modelProperties: {\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentWhatIfProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentWhatIfProperties\",\n    modelProperties: {\n      ...DeploymentProperties.type.modelProperties,\n      whatIfSettings: {\n        serializedName: \"whatIfSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentWhatIfSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenericResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      kind: {\n        constraints: {\n          Pattern: new RegExp(\"^[-\\\\w\\\\._,\\\\(\\\\)]+$\")\n        },\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenericResourceExpanded: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceExpanded\",\n    modelProperties: {\n      ...GenericResource.type.modelProperties,\n      createdTime: {\n        serializedName: \"createdTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      changedTime: {\n        serializedName: \"changedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentsWhatIfAtTenantScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtTenantScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentsWhatIfAtManagementGroupScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtManagementGroupScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentsWhatIfAtSubscriptionScopeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfAtSubscriptionScopeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentsWhatIfHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentsWhatIfHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  Deployment as DeploymentMapper,\n  ScopedDeployment as ScopedDeploymentMapper,\n  ScopedDeploymentWhatIf as ScopedDeploymentWhatIfMapper,\n  DeploymentWhatIf as DeploymentWhatIfMapper,\n  ProviderRegistrationRequest as ProviderRegistrationRequestMapper,\n  ResourcesMoveInfo as ResourcesMoveInfoMapper,\n  GenericResource as GenericResourceMapper,\n  ResourceGroup as ResourceGroupMapper,\n  ResourceGroupPatchable as ResourceGroupPatchableMapper,\n  ExportTemplateRequest as ExportTemplateRequestMapper,\n  TagsResource as TagsResourceMapper,\n  TagsPatchResource as TagsPatchResourceMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-04-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const scope: OperationURLParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    serializedName: \"scope\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const deploymentName: OperationURLParameter = {\n  parameterPath: \"deploymentName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\"),\n      MaxLength: 64,\n      MinLength: 1\n    },\n    serializedName: \"deploymentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DeploymentMapper\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ScopedDeploymentMapper\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ScopedDeploymentWhatIfMapper\n};\n\nexport const groupId: OperationURLParameter = {\n  parameterPath: \"groupId\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"groupId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DeploymentWhatIfMapper\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\"),\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const template: OperationParameter = {\n  parameterPath: \"template\",\n  mapper: {\n    serializedName: \"template\",\n    required: true,\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"any\" } }\n    }\n  }\n};\n\nexport const resourceProviderNamespace: OperationURLParameter = {\n  parameterPath: \"resourceProviderNamespace\",\n  mapper: {\n    serializedName: \"resourceProviderNamespace\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: [\"options\", \"properties\"],\n  mapper: ProviderRegistrationRequestMapper\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ResourcesMoveInfoMapper\n};\n\nexport const sourceResourceGroupName: OperationURLParameter = {\n  parameterPath: \"sourceResourceGroupName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._\\\\(\\\\)]+$\"),\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"sourceResourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parentResourcePath: OperationURLParameter = {\n  parameterPath: \"parentResourcePath\",\n  mapper: {\n    serializedName: \"parentResourcePath\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceType: OperationURLParameter = {\n  parameterPath: \"resourceType\",\n  mapper: {\n    serializedName: \"resourceType\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceName: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GenericResourceMapper\n};\n\nexport const resourceId: OperationURLParameter = {\n  parameterPath: \"resourceId\",\n  mapper: {\n    serializedName: \"resourceId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ResourceGroupMapper\n};\n\nexport const forceDeletionTypes: OperationQueryParameter = {\n  parameterPath: [\"options\", \"forceDeletionTypes\"],\n  mapper: {\n    serializedName: \"forceDeletionTypes\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ResourceGroupPatchableMapper\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExportTemplateRequestMapper\n};\n\nexport const resourceGroupName1: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tagName: OperationURLParameter = {\n  parameterPath: \"tagName\",\n  mapper: {\n    serializedName: \"tagName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tagValue: OperationURLParameter = {\n  parameterPath: \"tagValue\",\n  mapper: {\n    serializedName: \"tagValue\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TagsResourceMapper\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TagsPatchResourceMapper\n};\n\nexport const operationId: OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    serializedName: \"operationId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClient } from \"../resourceManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike }\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal\n      });\n    }\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Deployments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClient } from \"../resourceManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  DeploymentExtended,\n  DeploymentsListAtScopeNextOptionalParams,\n  DeploymentsListAtScopeOptionalParams,\n  DeploymentsListAtScopeResponse,\n  DeploymentsListAtTenantScopeNextOptionalParams,\n  DeploymentsListAtTenantScopeOptionalParams,\n  DeploymentsListAtTenantScopeResponse,\n  DeploymentsListAtManagementGroupScopeNextOptionalParams,\n  DeploymentsListAtManagementGroupScopeOptionalParams,\n  DeploymentsListAtManagementGroupScopeResponse,\n  DeploymentsListAtSubscriptionScopeNextOptionalParams,\n  DeploymentsListAtSubscriptionScopeOptionalParams,\n  DeploymentsListAtSubscriptionScopeResponse,\n  DeploymentsListByResourceGroupNextOptionalParams,\n  DeploymentsListByResourceGroupOptionalParams,\n  DeploymentsListByResourceGroupResponse,\n  DeploymentsDeleteAtScopeOptionalParams,\n  DeploymentsCheckExistenceAtScopeOptionalParams,\n  DeploymentsCheckExistenceAtScopeResponse,\n  Deployment,\n  DeploymentsCreateOrUpdateAtScopeOptionalParams,\n  DeploymentsCreateOrUpdateAtScopeResponse,\n  DeploymentsGetAtScopeOptionalParams,\n  DeploymentsGetAtScopeResponse,\n  DeploymentsCancelAtScopeOptionalParams,\n  DeploymentsValidateAtScopeOptionalParams,\n  DeploymentsValidateAtScopeResponse,\n  DeploymentsExportTemplateAtScopeOptionalParams,\n  DeploymentsExportTemplateAtScopeResponse,\n  DeploymentsDeleteAtTenantScopeOptionalParams,\n  DeploymentsCheckExistenceAtTenantScopeOptionalParams,\n  DeploymentsCheckExistenceAtTenantScopeResponse,\n  ScopedDeployment,\n  DeploymentsCreateOrUpdateAtTenantScopeOptionalParams,\n  DeploymentsCreateOrUpdateAtTenantScopeResponse,\n  DeploymentsGetAtTenantScopeOptionalParams,\n  DeploymentsGetAtTenantScopeResponse,\n  DeploymentsCancelAtTenantScopeOptionalParams,\n  DeploymentsValidateAtTenantScopeOptionalParams,\n  DeploymentsValidateAtTenantScopeResponse,\n  ScopedDeploymentWhatIf,\n  DeploymentsWhatIfAtTenantScopeOptionalParams,\n  DeploymentsWhatIfAtTenantScopeResponse,\n  DeploymentsExportTemplateAtTenantScopeOptionalParams,\n  DeploymentsExportTemplateAtTenantScopeResponse,\n  DeploymentsDeleteAtManagementGroupScopeOptionalParams,\n  DeploymentsCheckExistenceAtManagementGroupScopeOptionalParams,\n  DeploymentsCheckExistenceAtManagementGroupScopeResponse,\n  DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams,\n  DeploymentsCreateOrUpdateAtManagementGroupScopeResponse,\n  DeploymentsGetAtManagementGroupScopeOptionalParams,\n  DeploymentsGetAtManagementGroupScopeResponse,\n  DeploymentsCancelAtManagementGroupScopeOptionalParams,\n  DeploymentsValidateAtManagementGroupScopeOptionalParams,\n  DeploymentsValidateAtManagementGroupScopeResponse,\n  DeploymentsWhatIfAtManagementGroupScopeOptionalParams,\n  DeploymentsWhatIfAtManagementGroupScopeResponse,\n  DeploymentsExportTemplateAtManagementGroupScopeOptionalParams,\n  DeploymentsExportTemplateAtManagementGroupScopeResponse,\n  DeploymentsDeleteAtSubscriptionScopeOptionalParams,\n  DeploymentsCheckExistenceAtSubscriptionScopeOptionalParams,\n  DeploymentsCheckExistenceAtSubscriptionScopeResponse,\n  DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams,\n  DeploymentsCreateOrUpdateAtSubscriptionScopeResponse,\n  DeploymentsGetAtSubscriptionScopeOptionalParams,\n  DeploymentsGetAtSubscriptionScopeResponse,\n  DeploymentsCancelAtSubscriptionScopeOptionalParams,\n  DeploymentsValidateAtSubscriptionScopeOptionalParams,\n  DeploymentsValidateAtSubscriptionScopeResponse,\n  DeploymentWhatIf,\n  DeploymentsWhatIfAtSubscriptionScopeOptionalParams,\n  DeploymentsWhatIfAtSubscriptionScopeResponse,\n  DeploymentsExportTemplateAtSubscriptionScopeOptionalParams,\n  DeploymentsExportTemplateAtSubscriptionScopeResponse,\n  DeploymentsDeleteOptionalParams,\n  DeploymentsCheckExistenceOptionalParams,\n  DeploymentsCheckExistenceResponse,\n  DeploymentsCreateOrUpdateOptionalParams,\n  DeploymentsCreateOrUpdateResponse,\n  DeploymentsGetOptionalParams,\n  DeploymentsGetResponse,\n  DeploymentsCancelOptionalParams,\n  DeploymentsValidateOptionalParams,\n  DeploymentsValidateResponse,\n  DeploymentsWhatIfOptionalParams,\n  DeploymentsWhatIfResponse,\n  DeploymentsExportTemplateOptionalParams,\n  DeploymentsExportTemplateResponse,\n  DeploymentsCalculateTemplateHashOptionalParams,\n  DeploymentsCalculateTemplateHashResponse,\n  DeploymentsListAtScopeNextResponse,\n  DeploymentsListAtTenantScopeNextResponse,\n  DeploymentsListAtManagementGroupScopeNextResponse,\n  DeploymentsListAtSubscriptionScopeNextResponse,\n  DeploymentsListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Deployments operations. */\nexport class DeploymentsImpl implements Deployments {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Deployments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all the deployments at the given scope.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  public listAtScope(\n    scope: string,\n    options?: DeploymentsListAtScopeOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listAtScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listAtScopePagingPage(\n    scope: string,\n    options?: DeploymentsListAtScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListAtScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtScopePagingAll(\n    scope: string,\n    options?: DeploymentsListAtScopeOptionalParams\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listAtScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the deployments at the tenant scope.\n   * @param options The options parameters.\n   */\n  public listAtTenantScope(\n    options?: DeploymentsListAtTenantScopeOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listAtTenantScopePagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listAtTenantScopePagingPage(\n    options?: DeploymentsListAtTenantScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListAtTenantScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtTenantScope(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtTenantScopeNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtTenantScopePagingAll(\n    options?: DeploymentsListAtTenantScopeOptionalParams\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listAtTenantScopePagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the deployments for a management group.\n   * @param groupId The management group ID.\n   * @param options The options parameters.\n   */\n  public listAtManagementGroupScope(\n    groupId: string,\n    options?: DeploymentsListAtManagementGroupScopeOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listAtManagementGroupScopePagingAll(groupId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtManagementGroupScopePagingPage(\n          groupId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listAtManagementGroupScopePagingPage(\n    groupId: string,\n    options?: DeploymentsListAtManagementGroupScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListAtManagementGroupScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtManagementGroupScope(groupId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtManagementGroupScopeNext(\n        groupId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtManagementGroupScopePagingAll(\n    groupId: string,\n    options?: DeploymentsListAtManagementGroupScopeOptionalParams\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listAtManagementGroupScopePagingPage(\n      groupId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the deployments for a subscription.\n   * @param options The options parameters.\n   */\n  public listAtSubscriptionScope(\n    options?: DeploymentsListAtSubscriptionScopeOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listAtSubscriptionScopePagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtSubscriptionScopePagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listAtSubscriptionScopePagingPage(\n    options?: DeploymentsListAtSubscriptionScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListAtSubscriptionScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtSubscriptionScope(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtSubscriptionScopeNext(\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtSubscriptionScopePagingAll(\n    options?: DeploymentsListAtSubscriptionScopeOptionalParams\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listAtSubscriptionScopePagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the deployments for a resource group.\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   *                          case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: DeploymentsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentExtended> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DeploymentsListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentExtended[]> {\n    let result: DeploymentsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DeploymentsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<DeploymentExtended> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteAtScopeOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, deploymentName, options },\n      spec: deleteAtScopeOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtScopeAndWait(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteAtScopeOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtScope(\n      scope,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistenceAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceAtScopeOptionalParams\n  ): Promise<DeploymentsCheckExistenceAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      checkExistenceAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtScope(\n    scope: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateAtScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateAtScopeResponse>,\n      DeploymentsCreateOrUpdateAtScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsCreateOrUpdateAtScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, deploymentName, parameters, options },\n      spec: createOrUpdateAtScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateAtScopeResponse,\n      OperationState<DeploymentsCreateOrUpdateAtScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtScopeAndWait(\n    scope: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateAtScopeOptionalParams\n  ): Promise<DeploymentsCreateOrUpdateAtScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtScope(\n      scope,\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsGetAtScopeOptionalParams\n  ): Promise<DeploymentsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      getAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resources partially deployed.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancelAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsCancelAtScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      cancelAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtScope(\n    scope: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateAtScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateAtScopeResponse>,\n      DeploymentsValidateAtScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsValidateAtScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { scope, deploymentName, parameters, options },\n      spec: validateAtScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateAtScopeResponse,\n      OperationState<DeploymentsValidateAtScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtScopeAndWait(\n    scope: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateAtScopeOptionalParams\n  ): Promise<DeploymentsValidateAtScopeResponse> {\n    const poller = await this.beginValidateAtScope(\n      scope,\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplateAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentsExportTemplateAtScopeOptionalParams\n  ): Promise<DeploymentsExportTemplateAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      exportTemplateAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * Get all the deployments at the given scope.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  private _listAtScope(\n    scope: string,\n    options?: DeploymentsListAtScopeOptionalParams\n  ): Promise<DeploymentsListAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsDeleteAtTenantScopeOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, options },\n      spec: deleteAtTenantScopeOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtTenantScopeAndWait(\n    deploymentName: string,\n    options?: DeploymentsDeleteAtTenantScopeOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtTenantScope(deploymentName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistenceAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceAtTenantScopeOptionalParams\n  ): Promise<DeploymentsCheckExistenceAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      checkExistenceAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtTenantScope(\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsCreateOrUpdateAtTenantScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateAtTenantScopeResponse>,\n      DeploymentsCreateOrUpdateAtTenantScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsCreateOrUpdateAtTenantScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: createOrUpdateAtTenantScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateAtTenantScopeResponse,\n      OperationState<DeploymentsCreateOrUpdateAtTenantScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtTenantScopeAndWait(\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsCreateOrUpdateAtTenantScopeOptionalParams\n  ): Promise<DeploymentsCreateOrUpdateAtTenantScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtTenantScope(\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsGetAtTenantScopeOptionalParams\n  ): Promise<DeploymentsGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      getAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resources partially deployed.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancelAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsCancelAtTenantScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      cancelAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtTenantScope(\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsValidateAtTenantScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateAtTenantScopeResponse>,\n      DeploymentsValidateAtTenantScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsValidateAtTenantScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: validateAtTenantScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateAtTenantScopeResponse,\n      OperationState<DeploymentsValidateAtTenantScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtTenantScopeAndWait(\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsValidateAtTenantScopeOptionalParams\n  ): Promise<DeploymentsValidateAtTenantScopeResponse> {\n    const poller = await this.beginValidateAtTenantScope(\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the tenant group.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtTenantScope(\n    deploymentName: string,\n    parameters: ScopedDeploymentWhatIf,\n    options?: DeploymentsWhatIfAtTenantScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsWhatIfAtTenantScopeResponse>,\n      DeploymentsWhatIfAtTenantScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsWhatIfAtTenantScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: whatIfAtTenantScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsWhatIfAtTenantScopeResponse,\n      OperationState<DeploymentsWhatIfAtTenantScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the tenant group.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtTenantScopeAndWait(\n    deploymentName: string,\n    parameters: ScopedDeploymentWhatIf,\n    options?: DeploymentsWhatIfAtTenantScopeOptionalParams\n  ): Promise<DeploymentsWhatIfAtTenantScopeResponse> {\n    const poller = await this.beginWhatIfAtTenantScope(\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplateAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentsExportTemplateAtTenantScopeOptionalParams\n  ): Promise<DeploymentsExportTemplateAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      exportTemplateAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * Get all the deployments at the tenant scope.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScope(\n    options?: DeploymentsListAtTenantScopeOptionalParams\n  ): Promise<DeploymentsListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteAtManagementGroupScopeOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { groupId, deploymentName, options },\n      spec: deleteAtManagementGroupScopeOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtManagementGroupScopeAndWait(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteAtManagementGroupScopeOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistenceAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentsCheckExistenceAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      checkExistenceAtManagementGroupScopeOperationSpec\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateAtManagementGroupScopeResponse>,\n      DeploymentsCreateOrUpdateAtManagementGroupScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsCreateOrUpdateAtManagementGroupScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { groupId, deploymentName, parameters, options },\n      spec: createOrUpdateAtManagementGroupScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateAtManagementGroupScopeResponse,\n      OperationState<DeploymentsCreateOrUpdateAtManagementGroupScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtManagementGroupScopeAndWait(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsCreateOrUpdateAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentsCreateOrUpdateAtManagementGroupScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsGetAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      getAtManagementGroupScopeOperationSpec\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resources partially deployed.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancelAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsCancelAtManagementGroupScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      cancelAtManagementGroupScopeOperationSpec\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsValidateAtManagementGroupScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateAtManagementGroupScopeResponse>,\n      DeploymentsValidateAtManagementGroupScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsValidateAtManagementGroupScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { groupId, deploymentName, parameters, options },\n      spec: validateAtManagementGroupScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateAtManagementGroupScopeResponse,\n      OperationState<DeploymentsValidateAtManagementGroupScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtManagementGroupScopeAndWait(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeployment,\n    options?: DeploymentsValidateAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentsValidateAtManagementGroupScopeResponse> {\n    const poller = await this.beginValidateAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the management\n   * group.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeploymentWhatIf,\n    options?: DeploymentsWhatIfAtManagementGroupScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsWhatIfAtManagementGroupScopeResponse>,\n      DeploymentsWhatIfAtManagementGroupScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsWhatIfAtManagementGroupScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { groupId, deploymentName, parameters, options },\n      spec: whatIfAtManagementGroupScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsWhatIfAtManagementGroupScopeResponse,\n      OperationState<DeploymentsWhatIfAtManagementGroupScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the management\n   * group.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtManagementGroupScopeAndWait(\n    groupId: string,\n    deploymentName: string,\n    parameters: ScopedDeploymentWhatIf,\n    options?: DeploymentsWhatIfAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentsWhatIfAtManagementGroupScopeResponse> {\n    const poller = await this.beginWhatIfAtManagementGroupScope(\n      groupId,\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplateAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentsExportTemplateAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentsExportTemplateAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      exportTemplateAtManagementGroupScopeOperationSpec\n    );\n  }\n\n  /**\n   * Get all the deployments for a management group.\n   * @param groupId The management group ID.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScope(\n    groupId: string,\n    options?: DeploymentsListAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, options },\n      listAtManagementGroupScopeOperationSpec\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsDeleteAtSubscriptionScopeOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, options },\n      spec: deleteAtSubscriptionScopeOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. This is an asynchronous operation that returns a\n   * status of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running, a\n   * call to the URI in the Location header returns a status of 202. When the process finishes, the URI\n   * in the Location header returns a status of 204 on success. If the asynchronous request failed, the\n   * URI in the Location header returns an error-level status code.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAtSubscriptionScopeAndWait(\n    deploymentName: string,\n    options?: DeploymentsDeleteAtSubscriptionScopeOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteAtSubscriptionScope(\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistenceAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentsCheckExistenceAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      checkExistenceAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateAtSubscriptionScopeResponse>,\n      DeploymentsCreateOrUpdateAtSubscriptionScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsCreateOrUpdateAtSubscriptionScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: createOrUpdateAtSubscriptionScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateAtSubscriptionScopeResponse,\n      OperationState<DeploymentsCreateOrUpdateAtSubscriptionScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtSubscriptionScopeAndWait(\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentsCreateOrUpdateAtSubscriptionScopeResponse> {\n    const poller = await this.beginCreateOrUpdateAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsGetAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      getAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resources partially deployed.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancelAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsCancelAtSubscriptionScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      cancelAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtSubscriptionScope(\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateAtSubscriptionScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateAtSubscriptionScopeResponse>,\n      DeploymentsValidateAtSubscriptionScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsValidateAtSubscriptionScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: validateAtSubscriptionScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateAtSubscriptionScopeResponse,\n      OperationState<DeploymentsValidateAtSubscriptionScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAtSubscriptionScopeAndWait(\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentsValidateAtSubscriptionScopeResponse> {\n    const poller = await this.beginValidateAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the subscription.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to What If.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtSubscriptionScope(\n    deploymentName: string,\n    parameters: DeploymentWhatIf,\n    options?: DeploymentsWhatIfAtSubscriptionScopeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsWhatIfAtSubscriptionScopeResponse>,\n      DeploymentsWhatIfAtSubscriptionScopeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsWhatIfAtSubscriptionScopeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { deploymentName, parameters, options },\n      spec: whatIfAtSubscriptionScopeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsWhatIfAtSubscriptionScopeResponse,\n      OperationState<DeploymentsWhatIfAtSubscriptionScopeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the subscription.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to What If.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAtSubscriptionScopeAndWait(\n    deploymentName: string,\n    parameters: DeploymentWhatIf,\n    options?: DeploymentsWhatIfAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentsWhatIfAtSubscriptionScopeResponse> {\n    const poller = await this.beginWhatIfAtSubscriptionScope(\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplateAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentsExportTemplateAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentsExportTemplateAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      exportTemplateAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * Get all the deployments for a subscription.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScope(\n    options?: DeploymentsListAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. Deleting a template deployment does not affect the\n   * state of the resource group. This is an asynchronous operation that returns a status of 202 until\n   * the template deployment is successfully deleted. The Location response header contains the URI that\n   * is used to obtain the status of the process. While the process is running, a call to the URI in the\n   * Location header returns a status of 202. When the process finishes, the URI in the Location header\n   * returns a status of 204 on success. If the asynchronous request failed, the URI in the Location\n   * header returns an error-level status code.\n   * @param resourceGroupName The name of the resource group with the deployment to delete. The name is\n   *                          case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, deploymentName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template deployment\n   * removes the associated deployment operations. Deleting a template deployment does not affect the\n   * state of the resource group. This is an asynchronous operation that returns a status of 202 until\n   * the template deployment is successfully deleted. The Location response header contains the URI that\n   * is used to obtain the status of the process. While the process is running, a call to the URI in the\n   * Location header returns a status of 202. When the process finishes, the URI in the Location header\n   * returns a status of 204 on success. If the asynchronous request failed, the URI in the Location\n   * header returns an error-level status code.\n   * @param resourceGroupName The name of the resource group with the deployment to delete. The name is\n   *                          case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param resourceGroupName The name of the resource group with the deployment to check. The name is\n   *                          case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  checkExistence(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsCheckExistenceOptionalParams\n  ): Promise<DeploymentsCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      checkExistenceOperationSpec\n    );\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param resourceGroupName The name of the resource group to deploy the resources to. The name is case\n   *                          insensitive. The resource group must already exist.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateResponse>,\n      DeploymentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, deploymentName, parameters, options },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateResponse,\n      OperationState<DeploymentsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @param resourceGroupName The name of the resource group to deploy the resources to. The name is case\n   *                          insensitive. The resource group must already exist.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsCreateOrUpdateOptionalParams\n  ): Promise<DeploymentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsGetOptionalParams\n  ): Promise<DeploymentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment\n   * stops the currently running template deployment and leaves the resource group partially deployed.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  cancel(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsCancelOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      cancelOperationSpec\n    );\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The name\n   *                          is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidate(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsValidateResponse>,\n      DeploymentsValidateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsValidateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, deploymentName, parameters, options },\n      spec: validateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsValidateResponse,\n      OperationState<DeploymentsValidateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The name\n   *                          is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginValidateAndWait(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: Deployment,\n    options?: DeploymentsValidateOptionalParams\n  ): Promise<DeploymentsValidateResponse> {\n    const poller = await this.beginValidate(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the resource group.\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The name\n   *                          is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIf(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: DeploymentWhatIf,\n    options?: DeploymentsWhatIfOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsWhatIfResponse>,\n      DeploymentsWhatIfResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsWhatIfResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, deploymentName, parameters, options },\n      spec: whatIfOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsWhatIfResponse,\n      OperationState<DeploymentsWhatIfResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns changes that will be made by the deployment if executed at the scope of the resource group.\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The name\n   *                          is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The options parameters.\n   */\n  async beginWhatIfAndWait(\n    resourceGroupName: string,\n    deploymentName: string,\n    parameters: DeploymentWhatIf,\n    options?: DeploymentsWhatIfOptionalParams\n  ): Promise<DeploymentsWhatIfResponse> {\n    const poller = await this.beginWhatIf(\n      resourceGroupName,\n      deploymentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  exportTemplate(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentsExportTemplateOptionalParams\n  ): Promise<DeploymentsExportTemplateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      exportTemplateOperationSpec\n    );\n  }\n\n  /**\n   * Get all the deployments for a resource group.\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   *                          case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: DeploymentsListByResourceGroupOptionalParams\n  ): Promise<DeploymentsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Calculate the hash of the given template.\n   * @param template The template provided to calculate hash.\n   * @param options The options parameters.\n   */\n  calculateTemplateHash(\n    template: Record<string, unknown>,\n    options?: DeploymentsCalculateTemplateHashOptionalParams\n  ): Promise<DeploymentsCalculateTemplateHashResponse> {\n    return this.client.sendOperationRequest(\n      { template, options },\n      calculateTemplateHashOperationSpec\n    );\n  }\n\n  /**\n   * ListAtScopeNext\n   * @param scope The resource scope.\n   * @param nextLink The nextLink from the previous successful call to the ListAtScope method.\n   * @param options The options parameters.\n   */\n  private _listAtScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: DeploymentsListAtScopeNextOptionalParams\n  ): Promise<DeploymentsListAtScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listAtScopeNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAtTenantScopeNext\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScopeNext(\n    nextLink: string,\n    options?: DeploymentsListAtTenantScopeNextOptionalParams\n  ): Promise<DeploymentsListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAtTenantScopeNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAtManagementGroupScopeNext\n   * @param groupId The management group ID.\n   * @param nextLink The nextLink from the previous successful call to the ListAtManagementGroupScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScopeNext(\n    groupId: string,\n    nextLink: string,\n    options?: DeploymentsListAtManagementGroupScopeNextOptionalParams\n  ): Promise<DeploymentsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, nextLink, options },\n      listAtManagementGroupScopeNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAtSubscriptionScopeNext\n   * @param nextLink The nextLink from the previous successful call to the ListAtSubscriptionScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScopeNext(\n    nextLink: string,\n    options?: DeploymentsListAtSubscriptionScopeNextOptionalParams\n  ): Promise<DeploymentsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAtSubscriptionScopeNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   *                          case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: DeploymentsListByResourceGroupNextOptionalParams\n  ): Promise<DeploymentsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkExistenceAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelAtScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst exportTemplateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkExistenceAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst whatIfAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst exportTemplateAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkExistenceAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst whatIfAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst exportTemplateAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.groupId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkExistenceAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst whatIfAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst exportTemplateAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkExistenceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst whatIfOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.WhatIfOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst exportTemplateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst calculateTemplateHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Resources/calculateTemplateHash\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TemplateHashResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.template,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listAtScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtTenantScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtManagementGroupScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.groupId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtSubscriptionScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Providers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClient } from \"../resourceManagementClient\";\nimport {\n  Provider,\n  ProvidersListNextOptionalParams,\n  ProvidersListOptionalParams,\n  ProvidersListResponse,\n  ProvidersListAtTenantScopeNextOptionalParams,\n  ProvidersListAtTenantScopeOptionalParams,\n  ProvidersListAtTenantScopeResponse,\n  ProvidersUnregisterOptionalParams,\n  ProvidersUnregisterResponse,\n  ProvidersRegisterAtManagementGroupScopeOptionalParams,\n  ProvidersProviderPermissionsOptionalParams,\n  ProvidersProviderPermissionsResponse,\n  ProvidersRegisterOptionalParams,\n  ProvidersRegisterResponse,\n  ProvidersGetOptionalParams,\n  ProvidersGetResponse,\n  ProvidersGetAtTenantScopeOptionalParams,\n  ProvidersGetAtTenantScopeResponse,\n  ProvidersListNextResponse,\n  ProvidersListAtTenantScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Providers operations. */\nexport class ProvidersImpl implements Providers {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Providers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all resource providers for a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ProvidersListOptionalParams\n  ): PagedAsyncIterableIterator<Provider> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ProvidersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Provider[]> {\n    let result: ProvidersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ProvidersListOptionalParams\n  ): AsyncIterableIterator<Provider> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all resource providers for the tenant.\n   * @param options The options parameters.\n   */\n  public listAtTenantScope(\n    options?: ProvidersListAtTenantScopeOptionalParams\n  ): PagedAsyncIterableIterator<Provider> {\n    const iter = this.listAtTenantScopePagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listAtTenantScopePagingPage(\n    options?: ProvidersListAtTenantScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Provider[]> {\n    let result: ProvidersListAtTenantScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtTenantScope(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtTenantScopeNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtTenantScopePagingAll(\n    options?: ProvidersListAtTenantScopeOptionalParams\n  ): AsyncIterableIterator<Provider> {\n    for await (const page of this.listAtTenantScopePagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Unregisters a subscription from a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to unregister.\n   * @param options The options parameters.\n   */\n  unregister(\n    resourceProviderNamespace: string,\n    options?: ProvidersUnregisterOptionalParams\n  ): Promise<ProvidersUnregisterResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      unregisterOperationSpec\n    );\n  }\n\n  /**\n   * Registers a management group with a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param groupId The management group ID.\n   * @param options The options parameters.\n   */\n  registerAtManagementGroupScope(\n    resourceProviderNamespace: string,\n    groupId: string,\n    options?: ProvidersRegisterAtManagementGroupScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, groupId, options },\n      registerAtManagementGroupScopeOperationSpec\n    );\n  }\n\n  /**\n   * Get the provider permissions.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  providerPermissions(\n    resourceProviderNamespace: string,\n    options?: ProvidersProviderPermissionsOptionalParams\n  ): Promise<ProvidersProviderPermissionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      providerPermissionsOperationSpec\n    );\n  }\n\n  /**\n   * Registers a subscription with a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param options The options parameters.\n   */\n  register(\n    resourceProviderNamespace: string,\n    options?: ProvidersRegisterOptionalParams\n  ): Promise<ProvidersRegisterResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      registerOperationSpec\n    );\n  }\n\n  /**\n   * Gets all resource providers for a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ProvidersListOptionalParams\n  ): Promise<ProvidersListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets all resource providers for the tenant.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScope(\n    options?: ProvidersListAtTenantScopeOptionalParams\n  ): Promise<ProvidersListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  get(\n    resourceProviderNamespace: string,\n    options?: ProvidersGetOptionalParams\n  ): Promise<ProvidersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified resource provider at the tenant level.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    resourceProviderNamespace: string,\n    options?: ProvidersGetAtTenantScopeOptionalParams\n  ): Promise<ProvidersGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      getAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ProvidersListNextOptionalParams\n  ): Promise<ProvidersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAtTenantScopeNext\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScopeNext(\n    nextLink: string,\n    options?: ProvidersListAtTenantScopeNextOptionalParams\n  ): Promise<ProvidersListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAtTenantScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst unregisterOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst registerAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/{resourceProviderNamespace}/register\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.groupId,\n    Parameters.resourceProviderNamespace\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst providerPermissionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/providerPermissions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderPermissionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst registerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/{resourceProviderNamespace}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.resourceProviderNamespace],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtTenantScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ProviderResourceTypes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClient } from \"../resourceManagementClient\";\nimport {\n  ProviderResourceTypesListOptionalParams,\n  ProviderResourceTypesListResponse\n} from \"../models\";\n\n/** Class containing ProviderResourceTypes operations. */\nexport class ProviderResourceTypesImpl implements ProviderResourceTypes {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class ProviderResourceTypes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List the resource types for a specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  list(\n    resourceProviderNamespace: string,\n    options?: ProviderResourceTypesListOptionalParams\n  ): Promise<ProviderResourceTypesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderResourceTypeListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceProviderNamespace\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Resources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClient } from \"../resourceManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  GenericResourceExpanded,\n  ResourcesListByResourceGroupNextOptionalParams,\n  ResourcesListByResourceGroupOptionalParams,\n  ResourcesListByResourceGroupResponse,\n  ResourcesListNextOptionalParams,\n  ResourcesListOptionalParams,\n  ResourcesListResponse,\n  ResourcesMoveInfo,\n  ResourcesMoveResourcesOptionalParams,\n  ResourcesValidateMoveResourcesOptionalParams,\n  ResourcesCheckExistenceOptionalParams,\n  ResourcesCheckExistenceResponse,\n  ResourcesDeleteOptionalParams,\n  GenericResource,\n  ResourcesCreateOrUpdateOptionalParams,\n  ResourcesCreateOrUpdateResponse,\n  ResourcesUpdateOptionalParams,\n  ResourcesUpdateResponse,\n  ResourcesGetOptionalParams,\n  ResourcesGetResponse,\n  ResourcesCheckExistenceByIdOptionalParams,\n  ResourcesCheckExistenceByIdResponse,\n  ResourcesDeleteByIdOptionalParams,\n  ResourcesCreateOrUpdateByIdOptionalParams,\n  ResourcesCreateOrUpdateByIdResponse,\n  ResourcesUpdateByIdOptionalParams,\n  ResourcesUpdateByIdResponse,\n  ResourcesGetByIdOptionalParams,\n  ResourcesGetByIdResponse,\n  ResourcesListByResourceGroupNextResponse,\n  ResourcesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Resources operations. */\nexport class ResourcesImpl implements Resources {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class Resources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all the resources for a resource group.\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ResourcesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<GenericResourceExpanded> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ResourcesListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<GenericResourceExpanded[]> {\n    let result: ResourcesListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ResourcesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<GenericResourceExpanded> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the resources in a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ResourcesListOptionalParams\n  ): PagedAsyncIterableIterator<GenericResourceExpanded> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ResourcesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<GenericResourceExpanded[]> {\n    let result: ResourcesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ResourcesListOptionalParams\n  ): AsyncIterableIterator<GenericResourceExpanded> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all the resources for a resource group.\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ResourcesListByResourceGroupOptionalParams\n  ): Promise<ResourcesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * The resources to be moved must be in the same source resource group in the source subscription being\n   * used. The target resource group may be in a different subscription. When moving resources, both the\n   * source group and the target group are locked for the duration of the operation. Write and delete\n   * operations are blocked on the groups until the move completes.\n   * @param sourceResourceGroupName The name of the resource group from the source subscription\n   *                                containing the resources to be moved.\n   * @param parameters Parameters for moving resources.\n   * @param options The options parameters.\n   */\n  async beginMoveResources(\n    sourceResourceGroupName: string,\n    parameters: ResourcesMoveInfo,\n    options?: ResourcesMoveResourcesOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { sourceResourceGroupName, parameters, options },\n      spec: moveResourcesOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * The resources to be moved must be in the same source resource group in the source subscription being\n   * used. The target resource group may be in a different subscription. When moving resources, both the\n   * source group and the target group are locked for the duration of the operation. Write and delete\n   * operations are blocked on the groups until the move completes.\n   * @param sourceResourceGroupName The name of the resource group from the source subscription\n   *                                containing the resources to be moved.\n   * @param parameters Parameters for moving resources.\n   * @param options The options parameters.\n   */\n  async beginMoveResourcesAndWait(\n    sourceResourceGroupName: string,\n    parameters: ResourcesMoveInfo,\n    options?: ResourcesMoveResourcesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginMoveResources(\n      sourceResourceGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * This operation checks whether the specified resources can be moved to the target. The resources to\n   * be moved must be in the same source resource group in the source subscription being used. The target\n   * resource group may be in a different subscription. If validation succeeds, it returns HTTP response\n   * code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an\n   * error message. Retrieve the URL in the Location header value to check the result of the long-running\n   * operation.\n   * @param sourceResourceGroupName The name of the resource group from the source subscription\n   *                                containing the resources to be validated for move.\n   * @param parameters Parameters for moving resources.\n   * @param options The options parameters.\n   */\n  async beginValidateMoveResources(\n    sourceResourceGroupName: string,\n    parameters: ResourcesMoveInfo,\n    options?: ResourcesValidateMoveResourcesOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { sourceResourceGroupName, parameters, options },\n      spec: validateMoveResourcesOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * This operation checks whether the specified resources can be moved to the target. The resources to\n   * be moved must be in the same source resource group in the source subscription being used. The target\n   * resource group may be in a different subscription. If validation succeeds, it returns HTTP response\n   * code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an\n   * error message. Retrieve the URL in the Location header value to check the result of the long-running\n   * operation.\n   * @param sourceResourceGroupName The name of the resource group from the source subscription\n   *                                containing the resources to be validated for move.\n   * @param parameters Parameters for moving resources.\n   * @param options The options parameters.\n   */\n  async beginValidateMoveResourcesAndWait(\n    sourceResourceGroupName: string,\n    parameters: ResourcesMoveInfo,\n    options?: ResourcesValidateMoveResourcesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginValidateMoveResources(\n      sourceResourceGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get all the resources in a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ResourcesListOptionalParams\n  ): Promise<ResourcesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Checks whether a resource exists.\n   * @param resourceGroupName The name of the resource group containing the resource to check. The name\n   *                          is case insensitive.\n   * @param resourceProviderNamespace The resource provider of the resource to check.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to check whether it exists.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  checkExistence(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: ResourcesCheckExistenceOptionalParams\n  ): Promise<ResourcesCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      checkExistenceOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceGroupName The name of the resource group that contains the resource to delete. The\n   *                          name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to delete.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: ResourcesDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceGroupName The name of the resource group that contains the resource to delete. The\n   *                          name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to delete.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: ResourcesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Creates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   *                          insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to create.\n   * @param resourceName The name of the resource to create.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for creating or updating the resource.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourcesCreateOrUpdateResponse>,\n      ResourcesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ResourcesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        parameters,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ResourcesCreateOrUpdateResponse,\n      OperationState<ResourcesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   *                          insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to create.\n   * @param resourceName The name of the resource to create.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for creating or updating the resource.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesCreateOrUpdateOptionalParams\n  ): Promise<ResourcesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   *                          insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to update.\n   * @param resourceName The name of the resource to update.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for updating the resource.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourcesUpdateResponse>,\n      ResourcesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ResourcesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        parameters,\n        options\n      },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ResourcesUpdateResponse,\n      OperationState<ResourcesUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   *                          insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to update.\n   * @param resourceName The name of the resource to update.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for updating the resource.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesUpdateOptionalParams\n  ): Promise<ResourcesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      apiVersion,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a resource.\n   * @param resourceGroupName The name of the resource group containing the resource to get. The name is\n   *                          case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    apiVersion: string,\n    options?: ResourcesGetOptionalParams\n  ): Promise<ResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Checks by ID whether a resource exists.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  checkExistenceById(\n    resourceId: string,\n    apiVersion: string,\n    options?: ResourcesCheckExistenceByIdOptionalParams\n  ): Promise<ResourcesCheckExistenceByIdResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, apiVersion, options },\n      checkExistenceByIdOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  async beginDeleteById(\n    resourceId: string,\n    apiVersion: string,\n    options?: ResourcesDeleteByIdOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceId, apiVersion, options },\n      spec: deleteByIdOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  async beginDeleteByIdAndWait(\n    resourceId: string,\n    apiVersion: string,\n    options?: ResourcesDeleteByIdOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteById(resourceId, apiVersion, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Create a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Create or update resource parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateById(\n    resourceId: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesCreateOrUpdateByIdOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourcesCreateOrUpdateByIdResponse>,\n      ResourcesCreateOrUpdateByIdResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ResourcesCreateOrUpdateByIdResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceId, apiVersion, parameters, options },\n      spec: createOrUpdateByIdOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ResourcesCreateOrUpdateByIdResponse,\n      OperationState<ResourcesCreateOrUpdateByIdResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Create or update resource parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateByIdAndWait(\n    resourceId: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesCreateOrUpdateByIdOptionalParams\n  ): Promise<ResourcesCreateOrUpdateByIdResponse> {\n    const poller = await this.beginCreateOrUpdateById(\n      resourceId,\n      apiVersion,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Update resource parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdateById(\n    resourceId: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesUpdateByIdOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourcesUpdateByIdResponse>,\n      ResourcesUpdateByIdResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ResourcesUpdateByIdResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceId, apiVersion, parameters, options },\n      spec: updateByIdOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ResourcesUpdateByIdResponse,\n      OperationState<ResourcesUpdateByIdResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Update resource parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdateByIdAndWait(\n    resourceId: string,\n    apiVersion: string,\n    parameters: GenericResource,\n    options?: ResourcesUpdateByIdOptionalParams\n  ): Promise<ResourcesUpdateByIdResponse> {\n    const poller = await this.beginUpdateById(\n      resourceId,\n      apiVersion,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and resource\n   *                   type. Use the format,\n   *                   /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The options parameters.\n   */\n  getById(\n    resourceId: string,\n    apiVersion: string,\n    options?: ResourcesGetByIdOptionalParams\n  ): Promise<ResourcesGetByIdResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, apiVersion, options },\n      getByIdOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ResourcesListByResourceGroupNextOptionalParams\n  ): Promise<ResourcesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ResourcesListNextOptionalParams\n  ): Promise<ResourcesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.top,\n    Parameters.expand\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst moveResourcesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.sourceResourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst validateMoveResourcesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.sourceResourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.top,\n    Parameters.expand\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkExistenceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {\n      bodyMapper: Mappers.GenericResource\n    },\n    204: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {\n      bodyMapper: Mappers.GenericResource\n    },\n    204: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkExistenceByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {\n      bodyMapper: Mappers.GenericResource\n    },\n    204: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {\n      bodyMapper: Mappers.GenericResource\n    },\n    204: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ResourceGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClient } from \"../resourceManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ResourceGroup,\n  ResourceGroupsListNextOptionalParams,\n  ResourceGroupsListOptionalParams,\n  ResourceGroupsListResponse,\n  ResourceGroupsCheckExistenceOptionalParams,\n  ResourceGroupsCheckExistenceResponse,\n  ResourceGroupsCreateOrUpdateOptionalParams,\n  ResourceGroupsCreateOrUpdateResponse,\n  ResourceGroupsDeleteOptionalParams,\n  ResourceGroupsGetOptionalParams,\n  ResourceGroupsGetResponse,\n  ResourceGroupPatchable,\n  ResourceGroupsUpdateOptionalParams,\n  ResourceGroupsUpdateResponse,\n  ExportTemplateRequest,\n  ResourceGroupsExportTemplateOptionalParams,\n  ResourceGroupsExportTemplateResponse,\n  ResourceGroupsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ResourceGroups operations. */\nexport class ResourceGroupsImpl implements ResourceGroups {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class ResourceGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the resource groups for a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ResourceGroupsListOptionalParams\n  ): PagedAsyncIterableIterator<ResourceGroup> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ResourceGroupsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ResourceGroup[]> {\n    let result: ResourceGroupsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ResourceGroupsListOptionalParams\n  ): AsyncIterableIterator<ResourceGroup> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks whether a resource group exists.\n   * @param resourceGroupName The name of the resource group to check. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  checkExistence(\n    resourceGroupName: string,\n    options?: ResourceGroupsCheckExistenceOptionalParams\n  ): Promise<ResourceGroupsCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      checkExistenceOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a resource group.\n   * @param resourceGroupName The name of the resource group to create or update. Can include\n   *                          alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters that\n   *                          match the allowed characters.\n   * @param parameters Parameters supplied to the create or update a resource group.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    parameters: ResourceGroup,\n    options?: ResourceGroupsCreateOrUpdateOptionalParams\n  ): Promise<ResourceGroupsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * When you delete a resource group, all of its resources are also deleted. Deleting a resource group\n   * deletes all of its template deployments and currently stored operations.\n   * @param resourceGroupName The name of the resource group to delete. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    options?: ResourceGroupsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * When you delete a resource group, all of its resources are also deleted. Deleting a resource group\n   * deletes all of its template deployments and currently stored operations.\n   * @param resourceGroupName The name of the resource group to delete. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    options?: ResourceGroupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a resource group.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    options?: ResourceGroupsGetOptionalParams\n  ): Promise<ResourceGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Resource groups can be updated through a simple PATCH operation to a group address. The format of\n   * the request is the same as that for creating a resource group. If a field is unspecified, the\n   * current value is retained.\n   * @param resourceGroupName The name of the resource group to update. The name is case insensitive.\n   * @param parameters Parameters supplied to update a resource group.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    parameters: ResourceGroupPatchable,\n    options?: ResourceGroupsUpdateOptionalParams\n  ): Promise<ResourceGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Captures the specified resource group as a template.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters for exporting the template.\n   * @param options The options parameters.\n   */\n  async beginExportTemplate(\n    resourceGroupName: string,\n    parameters: ExportTemplateRequest,\n    options?: ResourceGroupsExportTemplateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ResourceGroupsExportTemplateResponse>,\n      ResourceGroupsExportTemplateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ResourceGroupsExportTemplateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, parameters, options },\n      spec: exportTemplateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ResourceGroupsExportTemplateResponse,\n      OperationState<ResourceGroupsExportTemplateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Captures the specified resource group as a template.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters Parameters for exporting the template.\n   * @param options The options parameters.\n   */\n  async beginExportTemplateAndWait(\n    resourceGroupName: string,\n    parameters: ExportTemplateRequest,\n    options?: ResourceGroupsExportTemplateOptionalParams\n  ): Promise<ResourceGroupsExportTemplateResponse> {\n    const poller = await this.beginExportTemplate(\n      resourceGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all the resource groups for a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ResourceGroupsListOptionalParams\n  ): Promise<ResourceGroupsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ResourceGroupsListNextOptionalParams\n  ): Promise<ResourceGroupsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkExistenceOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    201: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.forceDeletionTypes],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst exportTemplateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupExportResult\n    },\n    201: {\n      bodyMapper: Mappers.ResourceGroupExportResult\n    },\n    202: {\n      bodyMapper: Mappers.ResourceGroupExportResult\n    },\n    204: {\n      bodyMapper: Mappers.ResourceGroupExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters8,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourcegroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { TagsOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClient } from \"../resourceManagementClient\";\nimport {\n  TagDetails,\n  TagsListNextOptionalParams,\n  TagsListOptionalParams,\n  TagsListResponse,\n  TagsDeleteValueOptionalParams,\n  TagsCreateOrUpdateValueOptionalParams,\n  TagsCreateOrUpdateValueResponse,\n  TagsCreateOrUpdateOptionalParams,\n  TagsCreateOrUpdateResponse,\n  TagsDeleteOptionalParams,\n  TagsResource,\n  TagsCreateOrUpdateAtScopeOptionalParams,\n  TagsCreateOrUpdateAtScopeResponse,\n  TagsPatchResource,\n  TagsUpdateAtScopeOptionalParams,\n  TagsUpdateAtScopeResponse,\n  TagsGetAtScopeOptionalParams,\n  TagsGetAtScopeResponse,\n  TagsDeleteAtScopeOptionalParams,\n  TagsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing TagsOperations operations. */\nexport class TagsOperationsImpl implements TagsOperations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class TagsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * This operation performs a union of predefined tags, resource tags, resource group tags and\n   * subscription tags, and returns a summary of usage for each tag name and value under the given\n   * subscription. In case of a large number of tags, this operation may return a previously cached\n   * result.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: TagsListOptionalParams\n  ): PagedAsyncIterableIterator<TagDetails> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: TagsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<TagDetails[]> {\n    let result: TagsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: TagsListOptionalParams\n  ): AsyncIterableIterator<TagDetails> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * This operation allows deleting a value from the list of predefined values for an existing predefined\n   * tag name. The value being deleted must not be in use as a tag value for the given tag name for any\n   * resource.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param options The options parameters.\n   */\n  deleteValue(\n    tagName: string,\n    tagValue: string,\n    options?: TagsDeleteValueOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { tagName, tagValue, options },\n      deleteValueOperationSpec\n    );\n  }\n\n  /**\n   * This operation allows adding a value to the list of predefined values for an existing predefined tag\n   * name. A tag value can have a maximum of 256 characters.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param options The options parameters.\n   */\n  createOrUpdateValue(\n    tagName: string,\n    tagValue: string,\n    options?: TagsCreateOrUpdateValueOptionalParams\n  ): Promise<TagsCreateOrUpdateValueResponse> {\n    return this.client.sendOperationRequest(\n      { tagName, tagValue, options },\n      createOrUpdateValueOperationSpec\n    );\n  }\n\n  /**\n   * This operation allows adding a name to the list of predefined tag names for the given subscription.\n   * A tag name can have a maximum of 512 characters and is case-insensitive. Tag names cannot have the\n   * following prefixes which are reserved for Azure use: 'microsoft', 'azure', 'windows'.\n   * @param tagName The name of the tag to create.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    tagName: string,\n    options?: TagsCreateOrUpdateOptionalParams\n  ): Promise<TagsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { tagName, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * This operation allows deleting a name from the list of predefined tag names for the given\n   * subscription. The name being deleted must not be in use as a tag name for any resource. All\n   * predefined values for the given name must have already been deleted.\n   * @param tagName The name of the tag.\n   * @param options The options parameters.\n   */\n  delete(tagName: string, options?: TagsDeleteOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest(\n      { tagName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * This operation performs a union of predefined tags, resource tags, resource group tags and\n   * subscription tags, and returns a summary of usage for each tag name and value under the given\n   * subscription. In case of a large number of tags, this operation may return a previously cached\n   * result.\n   * @param options The options parameters.\n   */\n  private _list(options?: TagsListOptionalParams): Promise<TagsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * This operation allows adding or replacing the entire set of tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags API requests and responses.\n   * @param options The options parameters.\n   */\n  createOrUpdateAtScope(\n    scope: string,\n    parameters: TagsResource,\n    options?: TagsCreateOrUpdateAtScopeOptionalParams\n  ): Promise<TagsCreateOrUpdateAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, parameters, options },\n      createOrUpdateAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * This operation allows replacing, merging or selectively deleting tags on the specified resource or\n   * subscription. The specified entity can have a maximum of 50 tags at the end of the operation. The\n   * 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option allows\n   * adding tags with new names and updating the values of tags with existing names. The 'delete' option\n   * allows selectively deleting tags based on given names or name/value pairs.\n   * @param scope The resource scope.\n   * @param parameters Wrapper resource for tags patch API request only.\n   * @param options The options parameters.\n   */\n  updateAtScope(\n    scope: string,\n    parameters: TagsPatchResource,\n    options?: TagsUpdateAtScopeOptionalParams\n  ): Promise<TagsUpdateAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, parameters, options },\n      updateAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    options?: TagsGetAtScopeOptionalParams\n  ): Promise<TagsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      getAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the entire set of tags on a resource or subscription.\n   * @param scope The resource scope.\n   * @param options The options parameters.\n   */\n  deleteAtScope(\n    scope: string,\n    options?: TagsDeleteAtScopeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      deleteAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: TagsListNextOptionalParams\n  ): Promise<TagsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteValueOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.tagName,\n    Parameters.tagValue\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateValueOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagValue\n    },\n    201: {\n      bodyMapper: Mappers.TagValue\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.tagName,\n    Parameters.tagValue\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/tagNames/{tagName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagDetails\n    },\n    201: {\n      bodyMapper: Mappers.TagDetails\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.tagName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/tagNames/{tagName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.tagName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/tagNames\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/tags/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/tags/default\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/tags/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Resources/tags/default\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DeploymentOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClient } from \"../resourceManagementClient\";\nimport {\n  DeploymentOperation,\n  DeploymentOperationsListAtScopeNextOptionalParams,\n  DeploymentOperationsListAtScopeOptionalParams,\n  DeploymentOperationsListAtScopeResponse,\n  DeploymentOperationsListAtTenantScopeNextOptionalParams,\n  DeploymentOperationsListAtTenantScopeOptionalParams,\n  DeploymentOperationsListAtTenantScopeResponse,\n  DeploymentOperationsListAtManagementGroupScopeNextOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsListAtManagementGroupScopeResponse,\n  DeploymentOperationsListAtSubscriptionScopeNextOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsListAtSubscriptionScopeResponse,\n  DeploymentOperationsListNextOptionalParams,\n  DeploymentOperationsListOptionalParams,\n  DeploymentOperationsListResponse,\n  DeploymentOperationsGetAtScopeOptionalParams,\n  DeploymentOperationsGetAtScopeResponse,\n  DeploymentOperationsGetAtTenantScopeOptionalParams,\n  DeploymentOperationsGetAtTenantScopeResponse,\n  DeploymentOperationsGetAtManagementGroupScopeOptionalParams,\n  DeploymentOperationsGetAtManagementGroupScopeResponse,\n  DeploymentOperationsGetAtSubscriptionScopeOptionalParams,\n  DeploymentOperationsGetAtSubscriptionScopeResponse,\n  DeploymentOperationsGetOptionalParams,\n  DeploymentOperationsGetResponse,\n  DeploymentOperationsListAtScopeNextResponse,\n  DeploymentOperationsListAtTenantScopeNextResponse,\n  DeploymentOperationsListAtManagementGroupScopeNextResponse,\n  DeploymentOperationsListAtSubscriptionScopeNextResponse,\n  DeploymentOperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DeploymentOperations operations. */\nexport class DeploymentOperationsImpl implements DeploymentOperations {\n  private readonly client: ResourceManagementClient;\n\n  /**\n   * Initialize a new instance of the class DeploymentOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ResourceManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtScopePagingAll(scope, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtScopePagingPage(\n          scope,\n          deploymentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listAtScopePagingPage(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtScope(scope, deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtScopeNext(\n        scope,\n        deploymentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtScopePagingAll(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtScopePagingPage(\n      scope,\n      deploymentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtTenantScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtTenantScopePagingPage(\n          deploymentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listAtTenantScopePagingPage(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtTenantScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtTenantScope(deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtTenantScopeNext(\n        deploymentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtTenantScopePagingAll(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtTenantScopePagingPage(\n      deploymentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtManagementGroupScopePagingAll(\n      groupId,\n      deploymentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtManagementGroupScopePagingPage(\n          groupId,\n          deploymentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listAtManagementGroupScopePagingPage(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtManagementGroupScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtManagementGroupScope(\n        groupId,\n        deploymentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtManagementGroupScopeNext(\n        groupId,\n        deploymentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtManagementGroupScopePagingAll(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtManagementGroupScopePagingPage(\n      groupId,\n      deploymentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listAtSubscriptionScopePagingAll(deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAtSubscriptionScopePagingPage(\n          deploymentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listAtSubscriptionScopePagingPage(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListAtSubscriptionScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAtSubscriptionScope(deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAtSubscriptionScopeNext(\n        deploymentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAtSubscriptionScopePagingAll(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listAtSubscriptionScopePagingPage(\n      deploymentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentOperation> {\n    const iter = this.listPagingAll(resourceGroupName, deploymentName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          deploymentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentOperation[]> {\n    let result: DeploymentOperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, deploymentName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        deploymentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams\n  ): AsyncIterableIterator<DeploymentOperation> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      deploymentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtScope(\n    scope: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtScopeOptionalParams\n  ): Promise<DeploymentOperationsGetAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, operationId, options },\n      getAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtScope(\n    scope: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtScopeOptionalParams\n  ): Promise<DeploymentOperationsListAtScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, options },\n      listAtScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtTenantScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtTenantScopeOptionalParams\n  ): Promise<DeploymentOperationsGetAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, operationId, options },\n      getAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtTenantScopeOptionalParams\n  ): Promise<DeploymentOperationsListAtTenantScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      listAtTenantScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentOperationsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, operationId, options },\n      getAtManagementGroupScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScope(\n    groupId: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeOptionalParams\n  ): Promise<DeploymentOperationsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, options },\n      listAtManagementGroupScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  getAtSubscriptionScope(\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentOperationsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, operationId, options },\n      getAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScope(\n    deploymentName: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeOptionalParams\n  ): Promise<DeploymentOperationsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, options },\n      listAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    deploymentName: string,\n    operationId: string,\n    options?: DeploymentOperationsGetOptionalParams\n  ): Promise<DeploymentOperationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, operationId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    deploymentName: string,\n    options?: DeploymentOperationsListOptionalParams\n  ): Promise<DeploymentOperationsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListAtScopeNext\n   * @param scope The resource scope.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtScope method.\n   * @param options The options parameters.\n   */\n  private _listAtScopeNext(\n    scope: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtScopeNextOptionalParams\n  ): Promise<DeploymentOperationsListAtScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, deploymentName, nextLink, options },\n      listAtScopeNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAtTenantScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtTenantScope method.\n   * @param options The options parameters.\n   */\n  private _listAtTenantScopeNext(\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtTenantScopeNextOptionalParams\n  ): Promise<DeploymentOperationsListAtTenantScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, nextLink, options },\n      listAtTenantScopeNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAtManagementGroupScopeNext\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtManagementGroupScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtManagementGroupScopeNext(\n    groupId: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtManagementGroupScopeNextOptionalParams\n  ): Promise<DeploymentOperationsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { groupId, deploymentName, nextLink, options },\n      listAtManagementGroupScopeNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAtSubscriptionScopeNext\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the ListAtSubscriptionScope\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAtSubscriptionScopeNext(\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListAtSubscriptionScopeNextOptionalParams\n  ): Promise<DeploymentOperationsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { deploymentName, nextLink, options },\n      listAtSubscriptionScopeNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    deploymentName: string,\n    nextLink: string,\n    options?: DeploymentOperationsListNextOptionalParams\n  ): Promise<DeploymentOperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, deploymentName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAtScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtTenantScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.deploymentName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtManagementGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.scope,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtTenantScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtManagementGroupScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.groupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAtSubscriptionScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.deploymentName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  DeploymentsImpl,\n  ProvidersImpl,\n  ProviderResourceTypesImpl,\n  ResourcesImpl,\n  ResourceGroupsImpl,\n  TagsOperationsImpl,\n  DeploymentOperationsImpl\n} from \"./operations\";\nimport {\n  Operations,\n  Deployments,\n  Providers,\n  ProviderResourceTypes,\n  Resources,\n  ResourceGroups,\n  TagsOperations,\n  DeploymentOperations\n} from \"./operationsInterfaces\";\nimport { ResourceManagementClientOptionalParams } from \"./models\";\n\nexport class ResourceManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the ResourceManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The Microsoft Azure subscription ID.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: ResourceManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: ResourceManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-resources/5.2.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2021-04-01\";\n    this.operations = new OperationsImpl(this);\n    this.deployments = new DeploymentsImpl(this);\n    this.providers = new ProvidersImpl(this);\n    this.providerResourceTypes = new ProviderResourceTypesImpl(this);\n    this.resources = new ResourcesImpl(this);\n    this.resourceGroups = new ResourceGroupsImpl(this);\n    this.tagsOperations = new TagsOperationsImpl(this);\n    this.deploymentOperations = new DeploymentOperationsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  deployments: Deployments;\n  providers: Providers;\n  providerResourceTypes: ProviderResourceTypes;\n  resources: Resources;\n  resourceGroups: ResourceGroups;\n  tagsOperations: TagsOperations;\n  deploymentOperations: DeploymentOperations;\n}\n"],"names":["KnownExpressionEvaluationOptionsScopeType","KnownProvisioningState","KnownAliasPathTokenType","KnownAliasPathAttributes","KnownProviderAuthorizationConsentState","KnownExtendedLocationType","KnownTagsPatchOperation","DeploymentMapper","ScopedDeploymentMapper","ScopedDeploymentWhatIfMapper","DeploymentWhatIfMapper","ProviderRegistrationRequestMapper","ResourcesMoveInfoMapper","GenericResourceMapper","ResourceGroupMapper","ResourceGroupPatchableMapper","ExportTemplateRequestMapper","TagsResourceMapper","TagsPatchResourceMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.OperationListResult","Mappers.CloudError","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.nextLink","__rest","__awaiter","deleteAtScopeOperationSpec","createHttpPoller","createOrUpdateAtScopeOperationSpec","getAtScopeOperationSpec","listAtScopeOperationSpec","getAtTenantScopeOperationSpec","listAtTenantScopeOperationSpec","getAtManagementGroupScopeOperationSpec","listAtManagementGroupScopeOperationSpec","getAtSubscriptionScopeOperationSpec","listAtSubscriptionScopeOperationSpec","deleteOperationSpec","checkExistenceOperationSpec","createOrUpdateOperationSpec","getOperationSpec","exportTemplateOperationSpec","listByResourceGroupOperationSpec","listAtScopeNextOperationSpec","listAtTenantScopeNextOperationSpec","listAtManagementGroupScopeNextOperationSpec","listAtSubscriptionScopeNextOperationSpec","listByResourceGroupNextOperationSpec","Parameters.scope","Parameters.deploymentName","Mappers.DeploymentExtended","Parameters.parameters","Parameters.contentType","Mappers.DeploymentValidateResult","Mappers.DeploymentExportResult","Mappers.DeploymentListResult","Parameters.filter","Parameters.top","Parameters.parameters1","Mappers.WhatIfOperationResult","Parameters.parameters2","Parameters.groupId","Parameters.subscriptionId","Parameters.parameters3","Parameters.resourceGroupName","Mappers.TemplateHashResult","Parameters.template","Mappers.Provider","Parameters.resourceProviderNamespace","Mappers.ProviderPermissionListResult","Parameters.properties","Mappers.ProviderListResult","Parameters.expand","Mappers.ProviderResourceTypeListResult","updateOperationSpec","Mappers.ResourceListResult","Parameters.parameters4","Parameters.sourceResourceGroupName","Parameters.apiVersion1","Parameters.parentResourcePath","Parameters.resourceType","Parameters.resourceName","Mappers.GenericResource","Parameters.parameters5","Parameters.resourceId","Mappers.ResourceGroup","Parameters.parameters6","Parameters.forceDeletionTypes","Parameters.parameters7","Mappers.ResourceGroupExportResult","Parameters.parameters8","Parameters.resourceGroupName1","Mappers.ResourceGroupListResult","Parameters.tagName","Parameters.tagValue","Mappers.TagValue","Mappers.TagDetails","Mappers.TagsListResult","Mappers.TagsResource","Parameters.parameters9","Parameters.parameters10","Mappers.DeploymentOperation","Parameters.operationId","Mappers.DeploymentOperationsListResult","coreRestPipeline"],"mappings":"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"}