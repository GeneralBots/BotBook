import { Global } from "../operationsInterfaces";
import { WebSiteManagementClient } from "../webSiteManagementClient";
import { GlobalGetDeletedWebAppOptionalParams, GlobalGetDeletedWebAppResponse, GlobalGetDeletedWebAppSnapshotsOptionalParams, GlobalGetDeletedWebAppSnapshotsResponse, GlobalGetSubscriptionOperationWithAsyncResponseOptionalParams } from "../models";
/** Class containing Global operations. */
export declare class GlobalImpl implements Global {
    private readonly client;
    /**
     * Initialize a new instance of the class Global class.
     * @param client Reference to the service client
     */
    constructor(client: WebSiteManagementClient);
    /**
     * Description for Get deleted app for a subscription.
     * @param deletedSiteId The numeric ID of the deleted app, e.g. 12345
     * @param options The options parameters.
     */
    getDeletedWebApp(deletedSiteId: string, options?: GlobalGetDeletedWebAppOptionalParams): Promise<GlobalGetDeletedWebAppResponse>;
    /**
     * Description for Get all deleted apps for a subscription.
     * @param deletedSiteId The numeric ID of the deleted app, e.g. 12345
     * @param options The options parameters.
     */
    getDeletedWebAppSnapshots(deletedSiteId: string, options?: GlobalGetDeletedWebAppSnapshotsOptionalParams): Promise<GlobalGetDeletedWebAppSnapshotsResponse>;
    /**
     * Description for Gets an operation in a subscription and given region
     * @param location Location name
     * @param operationId Operation Id
     * @param options The options parameters.
     */
    getSubscriptionOperationWithAsyncResponse(location: string, operationId: string, options?: GlobalGetSubscriptionOperationWithAsyncResponseOptionalParams): Promise<void>;
}
//# sourceMappingURL=global.d.ts.map