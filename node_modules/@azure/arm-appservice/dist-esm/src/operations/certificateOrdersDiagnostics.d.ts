import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { CertificateOrdersDiagnostics } from "../operationsInterfaces";
import { WebSiteManagementClient } from "../webSiteManagementClient";
import { DetectorResponse, CertificateOrdersDiagnosticsListAppServiceCertificateOrderDetectorResponseOptionalParams, CertificateOrdersDiagnosticsGetAppServiceCertificateOrderDetectorResponseOptionalParams, CertificateOrdersDiagnosticsGetAppServiceCertificateOrderDetectorResponseResponse } from "../models";
/** Class containing CertificateOrdersDiagnostics operations. */
export declare class CertificateOrdersDiagnosticsImpl implements CertificateOrdersDiagnostics {
    private readonly client;
    /**
     * Initialize a new instance of the class CertificateOrdersDiagnostics class.
     * @param client Reference to the service client
     */
    constructor(client: WebSiteManagementClient);
    /**
     * Description for Microsoft.CertificateRegistration to get the list of detectors for this RP.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName The certificate order name for which the response is needed.
     * @param options The options parameters.
     */
    listAppServiceCertificateOrderDetectorResponse(resourceGroupName: string, certificateOrderName: string, options?: CertificateOrdersDiagnosticsListAppServiceCertificateOrderDetectorResponseOptionalParams): PagedAsyncIterableIterator<DetectorResponse>;
    private listAppServiceCertificateOrderDetectorResponsePagingPage;
    private listAppServiceCertificateOrderDetectorResponsePagingAll;
    /**
     * Description for Microsoft.CertificateRegistration to get the list of detectors for this RP.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName The certificate order name for which the response is needed.
     * @param options The options parameters.
     */
    private _listAppServiceCertificateOrderDetectorResponse;
    /**
     * Description for Microsoft.CertificateRegistration call to get a detector response from App Lens.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName The certificate order name for which the response is needed.
     * @param detectorName The detector name which needs to be run.
     * @param options The options parameters.
     */
    getAppServiceCertificateOrderDetectorResponse(resourceGroupName: string, certificateOrderName: string, detectorName: string, options?: CertificateOrdersDiagnosticsGetAppServiceCertificateOrderDetectorResponseOptionalParams): Promise<CertificateOrdersDiagnosticsGetAppServiceCertificateOrderDetectorResponseResponse>;
    /**
     * ListAppServiceCertificateOrderDetectorResponseNext
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName The certificate order name for which the response is needed.
     * @param nextLink The nextLink from the previous successful call to the
     *                 ListAppServiceCertificateOrderDetectorResponse method.
     * @param options The options parameters.
     */
    private _listAppServiceCertificateOrderDetectorResponseNext;
}
//# sourceMappingURL=certificateOrdersDiagnostics.d.ts.map