import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { GetUsagesInLocation } from "../operationsInterfaces";
import { WebSiteManagementClient } from "../webSiteManagementClient";
import { CsmUsageQuota, GetUsagesInLocationListOptionalParams } from "../models";
/** Class containing GetUsagesInLocation operations. */
export declare class GetUsagesInLocationImpl implements GetUsagesInLocation {
    private readonly client;
    /**
     * Initialize a new instance of the class GetUsagesInLocation class.
     * @param client Reference to the service client
     */
    constructor(client: WebSiteManagementClient);
    /**
     * List usages in cores for all skus used by a subscription in a given location, for a specific quota
     * type.
     * @param location The name of the Azure region.
     * @param options The options parameters.
     */
    list(location: string, options?: GetUsagesInLocationListOptionalParams): PagedAsyncIterableIterator<CsmUsageQuota>;
    private listPagingPage;
    private listPagingAll;
    /**
     * List usages in cores for all skus used by a subscription in a given location, for a specific quota
     * type.
     * @param location The name of the Azure region.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param location The name of the Azure region.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=getUsagesInLocation.d.ts.map