{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/subscriptions.ts","../src/operations/tenants.ts","../src/lroImpl.ts","../src/operations/subscriptionOperations.ts","../src/operations/operations.ts","../src/operations/alias.ts","../src/operations/subscriptionPolicy.ts","../src/operations/billingAccount.ts","../src/subscriptionClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given a result page from a pageable operation, returns a\n * continuation token that can be used to begin paging from\n * that point later.\n * @param page A result object from calling .byPage() on a paged operation.\n * @returns The continuation token that can be passed into byPage().\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Location list operation response. */\nexport interface LocationListResult {\n  /** An array of locations. */\n  value?: Location[];\n}\n\n/** Location information. */\nexport interface Location {\n  /**\n   * The fully qualified ID of the location. For example, /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The subscription ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n  /**\n   * The location name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The display name of the location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * The latitude of the location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly latitude?: string;\n  /**\n   * The longitude of the location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly longitude?: string;\n}\n\n/** Subscription information. */\nexport interface Subscription {\n  /**\n   * The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The subscription ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n  /**\n   * The subscription display name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: SubscriptionState;\n  /**\n   * The tenant ID. For example, 00000000-0000-0000-0000-000000000000.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** Tags for the subscription */\n  tags?: { [propertyName: string]: string };\n  /** The subscription policies. */\n  subscriptionPolicies?: SubscriptionPolicies;\n  /** The authorization source of the request. Valid values are one or more combinations of Legacy, RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'. */\n  authorizationSource?: string;\n}\n\n/** Subscription policies. */\nexport interface SubscriptionPolicies {\n  /**\n   * The subscription location placement ID. The ID indicates which regions are visible for a subscription. For example, a subscription with a location placement Id of Public_2014-09-01 has access to Azure public regions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locationPlacementId?: string;\n  /**\n   * The subscription quota ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quotaId?: string;\n  /**\n   * The subscription spending limit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly spendingLimit?: SpendingLimit;\n}\n\n/** Subscription list operation response. */\nexport interface SubscriptionListResult {\n  /** An array of subscriptions. */\n  value?: Subscription[];\n  /** The URL to get the next set of results. */\n  nextLink?: string;\n}\n\n/** Tenant Ids information. */\nexport interface TenantListResult {\n  /** An array of tenants. */\n  value?: TenantIdDescription[];\n  /** The URL to use for getting the next set of results. */\n  nextLink: string;\n}\n\n/** Tenant Id information. */\nexport interface TenantIdDescription {\n  /**\n   * The fully qualified ID of the tenant. For example, /tenants/00000000-0000-0000-0000-000000000000.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The tenant ID. For example, 00000000-0000-0000-0000-000000000000.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * The category of the tenant. Possible values are TenantCategoryHome,TenantCategoryProjectedBy,TenantCategoryManagedBy\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantCategory?: string;\n  /**\n   * The country/region name of the address for the tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly country?: string;\n  /**\n   * The Country/region abbreviation for the tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly countryCode?: string;\n  /**\n   * The display name of the tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * The list of domains for the tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly domains?: string;\n  /**\n   * The default domain for the tenant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultDomain?: string;\n  /**\n   * The tenant type. Only available for Home tenant category.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantType?: string;\n}\n\n/** The ID of the canceled subscription */\nexport interface CanceledSubscriptionId {\n  /**\n   * The ID of the canceled subscription\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n}\n\n/** Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. */\nexport interface ErrorResponseBody {\n  /** The details of the error. */\n  error?: ErrorResponse;\n  /** Error code */\n  code?: string;\n  /** Error message indicating why the operation failed. */\n  message?: string;\n}\n\n/** Describes the format of Error response. */\nexport interface ErrorResponse {\n  /** Error code */\n  code?: string;\n  /** Error message indicating why the operation failed. */\n  message?: string;\n}\n\n/** The new name of the subscription. */\nexport interface SubscriptionName {\n  /** New subscription name */\n  subscriptionName?: string;\n}\n\n/** The ID of the subscriptions that is being renamed */\nexport interface RenamedSubscriptionId {\n  /**\n   * The ID of the subscriptions that is being renamed\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n}\n\n/** The ID of the subscriptions that is being enabled */\nexport interface EnabledSubscriptionId {\n  /**\n   * The ID of the subscriptions that is being enabled\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n}\n\n/** Result of the request to list operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of operations. */\n  value?: Operation[];\n  /** URL to get the next set of operation list results if there are any. */\n  nextLink?: string;\n}\n\n/** REST API operation */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** Indicates whether the operation is a data action */\n  isDataAction?: boolean;\n  /** The object that represents the operation. */\n  display?: OperationDisplay;\n}\n\n/** The object that represents the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft.Subscription */\n  provider?: string;\n  /** Resource on which the operation is performed: Profile, endpoint, etc. */\n  resource?: string;\n  /** Operation type: Read, write, delete, etc. */\n  operation?: string;\n  /** Localized friendly description for the operation */\n  description?: string;\n}\n\n/** The parameters required to create a new subscription. */\nexport interface PutAliasRequest {\n  /** Put alias request properties. */\n  properties?: PutAliasRequestProperties;\n}\n\n/** Put subscription properties. */\nexport interface PutAliasRequestProperties {\n  /** The friendly name of the subscription. */\n  displayName?: string;\n  /** The workload type of the subscription. It can be either Production or DevTest. */\n  workload?: Workload;\n  /**\n   * Billing scope of the subscription.\n   * For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}\n   * For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}\n   * For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}\n   */\n  billingScope?: string;\n  /** This parameter can be used to create alias for existing subscription Id */\n  subscriptionId?: string;\n  /** Reseller Id */\n  resellerId?: string;\n  /** Put alias request additional properties. */\n  additionalProperties?: PutAliasRequestAdditionalProperties;\n}\n\n/** Put subscription additional properties. */\nexport interface PutAliasRequestAdditionalProperties {\n  /** Management group Id for the subscription. */\n  managementGroupId?: string;\n  /** Tenant Id of the subscription */\n  subscriptionTenantId?: string;\n  /** Owner Id of the subscription */\n  subscriptionOwnerId?: string;\n  /** Tags for the subscription */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Subscription Information with the alias. */\nexport interface SubscriptionAliasResponse {\n  /**\n   * Fully qualified ID for the alias resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Alias ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type, Microsoft.Subscription/aliases.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Subscription Alias response properties. */\n  properties?: SubscriptionAliasResponseProperties;\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Put subscription creation result properties. */\nexport interface SubscriptionAliasResponseProperties {\n  /**\n   * Newly created subscription Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n  /** The display name of the subscription. */\n  displayName?: string;\n  /** The provisioning state of the resource. */\n  provisioningState?: ProvisioningState;\n  /**\n   * Url to accept ownership of the subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly acceptOwnershipUrl?: string;\n  /**\n   * The accept ownership state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly acceptOwnershipState?: AcceptOwnership;\n  /**\n   * Billing scope of the subscription.\n   * For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}\n   * For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}\n   * For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}\n   */\n  billingScope?: string;\n  /** The workload type of the subscription. It can be either Production or DevTest. */\n  workload?: Workload;\n  /** Reseller Id */\n  resellerId?: string;\n  /** Owner Id of the subscription */\n  subscriptionOwnerId?: string;\n  /** The Management Group Id. */\n  managementGroupId?: string;\n  /** Created Time */\n  createdTime?: string;\n  /** Tags for the subscription */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** The list of aliases. */\nexport interface SubscriptionAliasListResult {\n  /**\n   * The list of alias.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SubscriptionAliasResponse[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The parameters required to accept subscription ownership. */\nexport interface AcceptOwnershipRequest {\n  /** Accept subscription ownership request properties. */\n  properties?: AcceptOwnershipRequestProperties;\n}\n\n/** Accept subscription ownership request properties. */\nexport interface AcceptOwnershipRequestProperties {\n  /** The friendly name of the subscription. */\n  displayName: string;\n  /** Management group Id for the subscription. */\n  managementGroupId?: string;\n  /** Tags for the subscription */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Subscription Accept Ownership Response */\nexport interface AcceptOwnershipStatusResponse {\n  /**\n   * Newly created subscription Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n  /**\n   * The accept ownership state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly acceptOwnershipState?: AcceptOwnership;\n  /**\n   * The provisioning state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: Provisioning;\n  /**\n   * UPN of the billing owner\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly billingOwner?: string;\n  /** Tenant Id of the subscription */\n  subscriptionTenantId?: string;\n  /** The display name of the subscription. */\n  displayName?: string;\n  /** Tags for the subscription */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Put tenant policy request properties. */\nexport interface PutTenantPolicyRequestProperties {\n  /** Blocks the leaving of subscriptions from user's tenant. */\n  blockSubscriptionsLeavingTenant?: boolean;\n  /** Blocks the entering of subscriptions into user's tenant. */\n  blockSubscriptionsIntoTenant?: boolean;\n  /** List of user objectIds that are exempted from the set subscription tenant policies for the user's tenant. */\n  exemptedPrincipals?: string[];\n}\n\n/** Tenant policy Information. */\nexport interface GetTenantPolicyResponse {\n  /**\n   * Policy Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Policy name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Tenant policy properties. */\n  properties?: TenantPolicy;\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Tenant policy. */\nexport interface TenantPolicy {\n  /**\n   * Policy Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyId?: string;\n  /** Blocks the leaving of subscriptions from user's tenant. */\n  blockSubscriptionsLeavingTenant?: boolean;\n  /** Blocks the entering of subscriptions into user's tenant. */\n  blockSubscriptionsIntoTenant?: boolean;\n  /** List of user objectIds that are exempted from the set subscription tenant policies for the user's tenant. */\n  exemptedPrincipals?: string[];\n}\n\n/** Tenant policy information list. */\nexport interface GetTenantPolicyListResponse {\n  /**\n   * The list of tenant policies.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: GetTenantPolicyResponse[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Billing account policies information. */\nexport interface BillingAccountPoliciesResponse {\n  /**\n   * Fully qualified ID for the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Policy name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Billing account policies response properties. */\n  properties?: BillingAccountPoliciesResponseProperties;\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Put billing account policies response properties. */\nexport interface BillingAccountPoliciesResponseProperties {\n  /** Service tenant for the billing account. */\n  serviceTenants?: ServiceTenantResponse[];\n  /** Determine if the transfers are allowed for the billing account */\n  allowTransfers?: boolean;\n}\n\n/** Billing account service tenant. */\nexport interface ServiceTenantResponse {\n  /** Service tenant id. */\n  tenantId?: string;\n  /** Service tenant name. */\n  tenantName?: string;\n}\n\n/** Defines headers for Subscription_acceptOwnership operation. */\nexport interface SubscriptionAcceptOwnershipHeaders {\n  /** GET this URL to retrieve the status of the asynchronous operation. */\n  location?: string;\n  /** The amount of delay to use while the status of the operation is checked. The value is expressed in seconds. */\n  retryAfter?: number;\n}\n\n/** Known values of {@link Workload} that the service accepts. */\nexport enum KnownWorkload {\n  /** Production */\n  Production = \"Production\",\n  /** DevTest */\n  DevTest = \"DevTest\"\n}\n\n/**\n * Defines values for Workload. \\\n * {@link KnownWorkload} can be used interchangeably with Workload,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Production** \\\n * **DevTest**\n */\nexport type Workload = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Accepted** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link AcceptOwnership} that the service accepts. */\nexport enum KnownAcceptOwnership {\n  /** Pending */\n  Pending = \"Pending\",\n  /** Completed */\n  Completed = \"Completed\",\n  /** Expired */\n  Expired = \"Expired\"\n}\n\n/**\n * Defines values for AcceptOwnership. \\\n * {@link KnownAcceptOwnership} can be used interchangeably with AcceptOwnership,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Completed** \\\n * **Expired**\n */\nexport type AcceptOwnership = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link Provisioning} that the service accepts. */\nexport enum KnownProvisioning {\n  /** Pending */\n  Pending = \"Pending\",\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\"\n}\n\n/**\n * Defines values for Provisioning. \\\n * {@link KnownProvisioning} can be used interchangeably with Provisioning,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Accepted** \\\n * **Succeeded**\n */\nexport type Provisioning = string;\n/** Defines values for SubscriptionState. */\nexport type SubscriptionState =\n  | \"Enabled\"\n  | \"Warned\"\n  | \"PastDue\"\n  | \"Disabled\"\n  | \"Deleted\";\n/** Defines values for SpendingLimit. */\nexport type SpendingLimit = \"On\" | \"Off\" | \"CurrentPeriodOff\";\n\n/** Optional parameters. */\nexport interface SubscriptionsListLocationsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listLocations operation. */\nexport type SubscriptionsListLocationsResponse = LocationListResult;\n\n/** Optional parameters. */\nexport interface SubscriptionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SubscriptionsGetResponse = Subscription;\n\n/** Optional parameters. */\nexport interface SubscriptionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SubscriptionsListResponse = SubscriptionListResult;\n\n/** Optional parameters. */\nexport interface SubscriptionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SubscriptionsListNextResponse = SubscriptionListResult;\n\n/** Optional parameters. */\nexport interface TenantsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TenantsListResponse = TenantListResult;\n\n/** Optional parameters. */\nexport interface TenantsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type TenantsListNextResponse = TenantListResult;\n\n/** Optional parameters. */\nexport interface SubscriptionCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the cancel operation. */\nexport type SubscriptionCancelResponse = CanceledSubscriptionId;\n\n/** Optional parameters. */\nexport interface SubscriptionRenameOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the rename operation. */\nexport type SubscriptionRenameResponse = RenamedSubscriptionId;\n\n/** Optional parameters. */\nexport interface SubscriptionEnableOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the enable operation. */\nexport type SubscriptionEnableResponse = EnabledSubscriptionId;\n\n/** Optional parameters. */\nexport interface SubscriptionAcceptOwnershipOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the acceptOwnership operation. */\nexport type SubscriptionAcceptOwnershipResponse = SubscriptionAcceptOwnershipHeaders;\n\n/** Optional parameters. */\nexport interface SubscriptionAcceptOwnershipStatusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the acceptOwnershipStatus operation. */\nexport type SubscriptionAcceptOwnershipStatusResponse = AcceptOwnershipStatusResponse;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface AliasCreateOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type AliasCreateResponse = SubscriptionAliasResponse;\n\n/** Optional parameters. */\nexport interface AliasGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AliasGetResponse = SubscriptionAliasResponse;\n\n/** Optional parameters. */\nexport interface AliasDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface AliasListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AliasListResponse = SubscriptionAliasListResult;\n\n/** Optional parameters. */\nexport interface SubscriptionPolicyAddUpdatePolicyForTenantOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the addUpdatePolicyForTenant operation. */\nexport type SubscriptionPolicyAddUpdatePolicyForTenantResponse = GetTenantPolicyResponse;\n\n/** Optional parameters. */\nexport interface SubscriptionPolicyGetPolicyForTenantOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getPolicyForTenant operation. */\nexport type SubscriptionPolicyGetPolicyForTenantResponse = GetTenantPolicyResponse;\n\n/** Optional parameters. */\nexport interface SubscriptionPolicyListPolicyForTenantOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listPolicyForTenant operation. */\nexport type SubscriptionPolicyListPolicyForTenantResponse = GetTenantPolicyListResponse;\n\n/** Optional parameters. */\nexport interface SubscriptionPolicyListPolicyForTenantNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listPolicyForTenantNext operation. */\nexport type SubscriptionPolicyListPolicyForTenantNextResponse = GetTenantPolicyListResponse;\n\n/** Optional parameters. */\nexport interface BillingAccountGetPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getPolicy operation. */\nexport type BillingAccountGetPolicyResponse = BillingAccountPoliciesResponse;\n\n/** Optional parameters. */\nexport interface SubscriptionClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const LocationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Location\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Location: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Location\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      latitude: {\n        serializedName: \"latitude\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      longitude: {\n        serializedName: \"longitude\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Subscription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Subscription\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Warned\", \"PastDue\", \"Disabled\", \"Deleted\"]\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      subscriptionPolicies: {\n        serializedName: \"subscriptionPolicies\",\n        type: {\n          name: \"Composite\",\n          className: \"SubscriptionPolicies\"\n        }\n      },\n      authorizationSource: {\n        serializedName: \"authorizationSource\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionPolicies: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionPolicies\",\n    modelProperties: {\n      locationPlacementId: {\n        serializedName: \"locationPlacementId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quotaId: {\n        serializedName: \"quotaId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      spendingLimit: {\n        serializedName: \"spendingLimit\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"On\", \"Off\", \"CurrentPeriodOff\"]\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Subscription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TenantListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TenantListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TenantIdDescription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TenantIdDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TenantIdDescription\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantCategory: {\n        serializedName: \"tenantCategory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      country: {\n        serializedName: \"country\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      countryCode: {\n        serializedName: \"countryCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      domains: {\n        serializedName: \"domains\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultDomain: {\n        serializedName: \"defaultDomain\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantType: {\n        serializedName: \"tenantType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CanceledSubscriptionId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CanceledSubscriptionId\",\n    modelProperties: {\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseBody\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponse\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionName\",\n    modelProperties: {\n      subscriptionName: {\n        serializedName: \"subscriptionName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RenamedSubscriptionId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RenamedSubscriptionId\",\n    modelProperties: {\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnabledSubscriptionId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnabledSubscriptionId\",\n    modelProperties: {\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutAliasRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PutAliasRequest\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PutAliasRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutAliasRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PutAliasRequestProperties\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workload: {\n        serializedName: \"workload\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingScope: {\n        serializedName: \"billingScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resellerId: {\n        serializedName: \"resellerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalProperties: {\n        serializedName: \"additionalProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"PutAliasRequestAdditionalProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PutAliasRequestAdditionalProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PutAliasRequestAdditionalProperties\",\n    modelProperties: {\n      managementGroupId: {\n        serializedName: \"managementGroupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionTenantId: {\n        serializedName: \"subscriptionTenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionOwnerId: {\n        serializedName: \"subscriptionOwnerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionAliasResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionAliasResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SubscriptionAliasResponseProperties\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionAliasResponseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionAliasResponseProperties\",\n    modelProperties: {\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptOwnershipUrl: {\n        serializedName: \"acceptOwnershipUrl\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptOwnershipState: {\n        serializedName: \"acceptOwnershipState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingScope: {\n        serializedName: \"billingScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workload: {\n        serializedName: \"workload\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resellerId: {\n        serializedName: \"resellerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionOwnerId: {\n        serializedName: \"subscriptionOwnerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managementGroupId: {\n        serializedName: \"managementGroupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdTime: {\n        serializedName: \"createdTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionAliasListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionAliasListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubscriptionAliasResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AcceptOwnershipRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcceptOwnershipRequest\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AcceptOwnershipRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AcceptOwnershipRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcceptOwnershipRequestProperties\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managementGroupId: {\n        serializedName: \"managementGroupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const AcceptOwnershipStatusResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcceptOwnershipStatusResponse\",\n    modelProperties: {\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptOwnershipState: {\n        serializedName: \"acceptOwnershipState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingOwner: {\n        serializedName: \"billingOwner\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionTenantId: {\n        serializedName: \"subscriptionTenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PutTenantPolicyRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PutTenantPolicyRequestProperties\",\n    modelProperties: {\n      blockSubscriptionsLeavingTenant: {\n        serializedName: \"blockSubscriptionsLeavingTenant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      blockSubscriptionsIntoTenant: {\n        serializedName: \"blockSubscriptionsIntoTenant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      exemptedPrincipals: {\n        serializedName: \"exemptedPrincipals\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Uuid\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetTenantPolicyResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GetTenantPolicyResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"TenantPolicy\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const TenantPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TenantPolicy\",\n    modelProperties: {\n      policyId: {\n        serializedName: \"policyId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      blockSubscriptionsLeavingTenant: {\n        serializedName: \"blockSubscriptionsLeavingTenant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      blockSubscriptionsIntoTenant: {\n        serializedName: \"blockSubscriptionsIntoTenant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      exemptedPrincipals: {\n        serializedName: \"exemptedPrincipals\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Uuid\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GetTenantPolicyListResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GetTenantPolicyListResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GetTenantPolicyResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BillingAccountPoliciesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BillingAccountPoliciesResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BillingAccountPoliciesResponseProperties\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const BillingAccountPoliciesResponseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BillingAccountPoliciesResponseProperties\",\n    modelProperties: {\n      serviceTenants: {\n        serializedName: \"serviceTenants\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceTenantResponse\"\n            }\n          }\n        }\n      },\n      allowTransfers: {\n        serializedName: \"allowTransfers\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceTenantResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceTenantResponse\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantName: {\n        serializedName: \"tenantName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionAcceptOwnershipHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionAcceptOwnershipHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  SubscriptionName as SubscriptionNameMapper,\n  AcceptOwnershipRequest as AcceptOwnershipRequestMapper,\n  PutAliasRequest as PutAliasRequestMapper,\n  PutTenantPolicyRequestProperties as PutTenantPolicyRequestPropertiesMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2016-06-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SubscriptionNameMapper\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: AcceptOwnershipRequestMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: PutAliasRequestMapper\n};\n\nexport const aliasName: OperationURLParameter = {\n  parameterPath: \"aliasName\",\n  mapper: {\n    serializedName: \"aliasName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: PutTenantPolicyRequestPropertiesMapper\n};\n\nexport const billingAccountId: OperationURLParameter = {\n  parameterPath: \"billingAccountId\",\n  mapper: {\n    serializedName: \"billingAccountId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Subscriptions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClient } from \"../subscriptionClient\";\nimport {\n  Location,\n  SubscriptionsListLocationsOptionalParams,\n  SubscriptionsListLocationsResponse,\n  Subscription,\n  SubscriptionsListNextOptionalParams,\n  SubscriptionsListOptionalParams,\n  SubscriptionsListResponse,\n  SubscriptionsGetOptionalParams,\n  SubscriptionsGetResponse,\n  SubscriptionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Subscriptions operations. */\nexport class SubscriptionsImpl implements Subscriptions {\n  private readonly client: SubscriptionClient;\n\n  /**\n   * Initialize a new instance of the class Subscriptions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SubscriptionClient) {\n    this.client = client;\n  }\n\n  /**\n   * This operation provides all the locations that are available for resource providers; however, each\n   * resource provider may support a subset of this list.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The options parameters.\n   */\n  public listLocations(\n    subscriptionId: string,\n    options?: SubscriptionsListLocationsOptionalParams\n  ): PagedAsyncIterableIterator<Location> {\n    const iter = this.listLocationsPagingAll(subscriptionId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listLocationsPagingPage(subscriptionId, options, settings);\n      }\n    };\n  }\n\n  private async *listLocationsPagingPage(\n    subscriptionId: string,\n    options?: SubscriptionsListLocationsOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Location[]> {\n    let result: SubscriptionsListLocationsResponse;\n    result = await this._listLocations(subscriptionId, options);\n    yield result.value || [];\n  }\n\n  private async *listLocationsPagingAll(\n    subscriptionId: string,\n    options?: SubscriptionsListLocationsOptionalParams\n  ): AsyncIterableIterator<Location> {\n    for await (const page of this.listLocationsPagingPage(\n      subscriptionId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all subscriptions for a tenant.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: SubscriptionsListOptionalParams\n  ): PagedAsyncIterableIterator<Subscription> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: SubscriptionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Subscription[]> {\n    let result: SubscriptionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: SubscriptionsListOptionalParams\n  ): AsyncIterableIterator<Subscription> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * This operation provides all the locations that are available for resource providers; however, each\n   * resource provider may support a subset of this list.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The options parameters.\n   */\n  private _listLocations(\n    subscriptionId: string,\n    options?: SubscriptionsListLocationsOptionalParams\n  ): Promise<SubscriptionsListLocationsResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, options },\n      listLocationsOperationSpec\n    );\n  }\n\n  /**\n   * Gets details about a specified subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The options parameters.\n   */\n  get(\n    subscriptionId: string,\n    options?: SubscriptionsGetOptionalParams\n  ): Promise<SubscriptionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets all subscriptions for a tenant.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: SubscriptionsListOptionalParams\n  ): Promise<SubscriptionsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: SubscriptionsListNextOptionalParams\n  ): Promise<SubscriptionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listLocationsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/locations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocationListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Subscription\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Tenants } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClient } from \"../subscriptionClient\";\nimport {\n  TenantIdDescription,\n  TenantsListNextOptionalParams,\n  TenantsListOptionalParams,\n  TenantsListResponse,\n  TenantsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Tenants operations. */\nexport class TenantsImpl implements Tenants {\n  private readonly client: SubscriptionClient;\n\n  /**\n   * Initialize a new instance of the class Tenants class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SubscriptionClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the tenants for your account.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: TenantsListOptionalParams\n  ): PagedAsyncIterableIterator<TenantIdDescription> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: TenantsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<TenantIdDescription[]> {\n    let result: TenantsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: TenantsListOptionalParams\n  ): AsyncIterableIterator<TenantIdDescription> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the tenants for your account.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: TenantsListOptionalParams\n  ): Promise<TenantsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: TenantsListNextOptionalParams\n  ): Promise<TenantsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/tenants\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TenantListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TenantListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SubscriptionOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClient } from \"../subscriptionClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SubscriptionCancelOptionalParams,\n  SubscriptionCancelResponse,\n  SubscriptionName,\n  SubscriptionRenameOptionalParams,\n  SubscriptionRenameResponse,\n  SubscriptionEnableOptionalParams,\n  SubscriptionEnableResponse,\n  AcceptOwnershipRequest,\n  SubscriptionAcceptOwnershipOptionalParams,\n  SubscriptionAcceptOwnershipResponse,\n  SubscriptionAcceptOwnershipStatusOptionalParams,\n  SubscriptionAcceptOwnershipStatusResponse\n} from \"../models\";\n\n/** Class containing SubscriptionOperations operations. */\nexport class SubscriptionOperationsImpl implements SubscriptionOperations {\n  private readonly client: SubscriptionClient;\n\n  /**\n   * Initialize a new instance of the class SubscriptionOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SubscriptionClient) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to cancel a subscription\n   * @param subscriptionId Subscription Id.\n   * @param options The options parameters.\n   */\n  cancel(\n    subscriptionId: string,\n    options?: SubscriptionCancelOptionalParams\n  ): Promise<SubscriptionCancelResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, options },\n      cancelOperationSpec\n    );\n  }\n\n  /**\n   * The operation to rename a subscription\n   * @param subscriptionId Subscription Id.\n   * @param body Subscription Name\n   * @param options The options parameters.\n   */\n  rename(\n    subscriptionId: string,\n    body: SubscriptionName,\n    options?: SubscriptionRenameOptionalParams\n  ): Promise<SubscriptionRenameResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, body, options },\n      renameOperationSpec\n    );\n  }\n\n  /**\n   * The operation to enable a subscription\n   * @param subscriptionId Subscription Id.\n   * @param options The options parameters.\n   */\n  enable(\n    subscriptionId: string,\n    options?: SubscriptionEnableOptionalParams\n  ): Promise<SubscriptionEnableResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, options },\n      enableOperationSpec\n    );\n  }\n\n  /**\n   * Accept subscription ownership.\n   * @param subscriptionId Subscription Id.\n   * @param body The parameters required to accept subscription ownership.\n   * @param options The options parameters.\n   */\n  async beginAcceptOwnership(\n    subscriptionId: string,\n    body: AcceptOwnershipRequest,\n    options?: SubscriptionAcceptOwnershipOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SubscriptionAcceptOwnershipResponse>,\n      SubscriptionAcceptOwnershipResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SubscriptionAcceptOwnershipResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { subscriptionId, body, options },\n      acceptOwnershipOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Accept subscription ownership.\n   * @param subscriptionId Subscription Id.\n   * @param body The parameters required to accept subscription ownership.\n   * @param options The options parameters.\n   */\n  async beginAcceptOwnershipAndWait(\n    subscriptionId: string,\n    body: AcceptOwnershipRequest,\n    options?: SubscriptionAcceptOwnershipOptionalParams\n  ): Promise<SubscriptionAcceptOwnershipResponse> {\n    const poller = await this.beginAcceptOwnership(\n      subscriptionId,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Accept subscription ownership status.\n   * @param subscriptionId Subscription Id.\n   * @param options The options parameters.\n   */\n  acceptOwnershipStatus(\n    subscriptionId: string,\n    options?: SubscriptionAcceptOwnershipStatusOptionalParams\n  ): Promise<SubscriptionAcceptOwnershipStatusResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, options },\n      acceptOwnershipStatusOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CanceledSubscriptionId\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst renameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RenamedSubscriptionId\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst enableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EnabledSubscriptionId\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst acceptOwnershipOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnership\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      headersMapper: Mappers.SubscriptionAcceptOwnershipHeaders\n    },\n    201: {\n      headersMapper: Mappers.SubscriptionAcceptOwnershipHeaders\n    },\n    202: {\n      headersMapper: Mappers.SubscriptionAcceptOwnershipHeaders\n    },\n    204: {\n      headersMapper: Mappers.SubscriptionAcceptOwnershipHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst acceptOwnershipStatusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Subscription/subscriptions/{subscriptionId}/acceptOwnershipStatus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AcceptOwnershipStatusResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClient } from \"../subscriptionClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: SubscriptionClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SubscriptionClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Subscription API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Microsoft.Subscription API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Subscription/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Alias } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClient } from \"../subscriptionClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PutAliasRequest,\n  AliasCreateOptionalParams,\n  AliasCreateResponse,\n  AliasGetOptionalParams,\n  AliasGetResponse,\n  AliasDeleteOptionalParams,\n  AliasListOptionalParams,\n  AliasListResponse\n} from \"../models\";\n\n/** Class containing Alias operations. */\nexport class AliasImpl implements Alias {\n  private readonly client: SubscriptionClient;\n\n  /**\n   * Initialize a new instance of the class Alias class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SubscriptionClient) {\n    this.client = client;\n  }\n\n  /**\n   * Create Alias Subscription.\n   * @param aliasName AliasName is the name for the subscription creation request. Note that this is not\n   *                  the same as subscription name and this doesn’t have any other lifecycle need beyond the request for\n   *                  subscription creation.\n   * @param body The parameters required to create a new subscription.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    aliasName: string,\n    body: PutAliasRequest,\n    options?: AliasCreateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<AliasCreateResponse>, AliasCreateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AliasCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { aliasName, body, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create Alias Subscription.\n   * @param aliasName AliasName is the name for the subscription creation request. Note that this is not\n   *                  the same as subscription name and this doesn’t have any other lifecycle need beyond the request for\n   *                  subscription creation.\n   * @param body The parameters required to create a new subscription.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    aliasName: string,\n    body: PutAliasRequest,\n    options?: AliasCreateOptionalParams\n  ): Promise<AliasCreateResponse> {\n    const poller = await this.beginCreate(aliasName, body, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get Alias Subscription.\n   * @param aliasName AliasName is the name for the subscription creation request. Note that this is not\n   *                  the same as subscription name and this doesn’t have any other lifecycle need beyond the request for\n   *                  subscription creation.\n   * @param options The options parameters.\n   */\n  get(\n    aliasName: string,\n    options?: AliasGetOptionalParams\n  ): Promise<AliasGetResponse> {\n    return this.client.sendOperationRequest(\n      { aliasName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete Alias.\n   * @param aliasName AliasName is the name for the subscription creation request. Note that this is not\n   *                  the same as subscription name and this doesn’t have any other lifecycle need beyond the request for\n   *                  subscription creation.\n   * @param options The options parameters.\n   */\n  delete(\n    aliasName: string,\n    options?: AliasDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { aliasName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * List Alias Subscription.\n   * @param options The options parameters.\n   */\n  list(options?: AliasListOptionalParams): Promise<AliasListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Subscription/aliases/{aliasName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionAliasResponse\n    },\n    201: {\n      bodyMapper: Mappers.SubscriptionAliasResponse\n    },\n    202: {\n      bodyMapper: Mappers.SubscriptionAliasResponse\n    },\n    204: {\n      bodyMapper: Mappers.SubscriptionAliasResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  requestBody: Parameters.body2,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.aliasName],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Subscription/aliases/{aliasName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionAliasResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.aliasName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Subscription/aliases/{aliasName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.aliasName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Subscription/aliases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionAliasListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { SubscriptionPolicy } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClient } from \"../subscriptionClient\";\nimport {\n  GetTenantPolicyResponse,\n  SubscriptionPolicyListPolicyForTenantNextOptionalParams,\n  SubscriptionPolicyListPolicyForTenantOptionalParams,\n  SubscriptionPolicyListPolicyForTenantResponse,\n  PutTenantPolicyRequestProperties,\n  SubscriptionPolicyAddUpdatePolicyForTenantOptionalParams,\n  SubscriptionPolicyAddUpdatePolicyForTenantResponse,\n  SubscriptionPolicyGetPolicyForTenantOptionalParams,\n  SubscriptionPolicyGetPolicyForTenantResponse,\n  SubscriptionPolicyListPolicyForTenantNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SubscriptionPolicy operations. */\nexport class SubscriptionPolicyImpl implements SubscriptionPolicy {\n  private readonly client: SubscriptionClient;\n\n  /**\n   * Initialize a new instance of the class SubscriptionPolicy class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SubscriptionClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the subscription tenant policy for the user's tenant.\n   * @param options The options parameters.\n   */\n  public listPolicyForTenant(\n    options?: SubscriptionPolicyListPolicyForTenantOptionalParams\n  ): PagedAsyncIterableIterator<GetTenantPolicyResponse> {\n    const iter = this.listPolicyForTenantPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPolicyForTenantPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPolicyForTenantPagingPage(\n    options?: SubscriptionPolicyListPolicyForTenantOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<GetTenantPolicyResponse[]> {\n    let result: SubscriptionPolicyListPolicyForTenantResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listPolicyForTenant(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listPolicyForTenantNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPolicyForTenantPagingAll(\n    options?: SubscriptionPolicyListPolicyForTenantOptionalParams\n  ): AsyncIterableIterator<GetTenantPolicyResponse> {\n    for await (const page of this.listPolicyForTenantPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or Update Subscription tenant policy for user's tenant.\n   * @param body Put tenant policy request properties.\n   * @param options The options parameters.\n   */\n  addUpdatePolicyForTenant(\n    body: PutTenantPolicyRequestProperties,\n    options?: SubscriptionPolicyAddUpdatePolicyForTenantOptionalParams\n  ): Promise<SubscriptionPolicyAddUpdatePolicyForTenantResponse> {\n    return this.client.sendOperationRequest(\n      { body, options },\n      addUpdatePolicyForTenantOperationSpec\n    );\n  }\n\n  /**\n   * Get the subscription tenant policy for the user's tenant.\n   * @param options The options parameters.\n   */\n  getPolicyForTenant(\n    options?: SubscriptionPolicyGetPolicyForTenantOptionalParams\n  ): Promise<SubscriptionPolicyGetPolicyForTenantResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPolicyForTenantOperationSpec\n    );\n  }\n\n  /**\n   * Get the subscription tenant policy for the user's tenant.\n   * @param options The options parameters.\n   */\n  private _listPolicyForTenant(\n    options?: SubscriptionPolicyListPolicyForTenantOptionalParams\n  ): Promise<SubscriptionPolicyListPolicyForTenantResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listPolicyForTenantOperationSpec\n    );\n  }\n\n  /**\n   * ListPolicyForTenantNext\n   * @param nextLink The nextLink from the previous successful call to the ListPolicyForTenant method.\n   * @param options The options parameters.\n   */\n  private _listPolicyForTenantNext(\n    nextLink: string,\n    options?: SubscriptionPolicyListPolicyForTenantNextOptionalParams\n  ): Promise<SubscriptionPolicyListPolicyForTenantNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listPolicyForTenantNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst addUpdatePolicyForTenantOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Subscription/policies/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetTenantPolicyResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getPolicyForTenantOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Subscription/policies/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetTenantPolicyResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listPolicyForTenantOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Subscription/policies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetTenantPolicyListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listPolicyForTenantNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GetTenantPolicyListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BillingAccount } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SubscriptionClient } from \"../subscriptionClient\";\nimport {\n  BillingAccountGetPolicyOptionalParams,\n  BillingAccountGetPolicyResponse\n} from \"../models\";\n\n/** Class containing BillingAccount operations. */\nexport class BillingAccountImpl implements BillingAccount {\n  private readonly client: SubscriptionClient;\n\n  /**\n   * Initialize a new instance of the class BillingAccount class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SubscriptionClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get Billing Account Policy.\n   * @param billingAccountId Billing Account Id.\n   * @param options The options parameters.\n   */\n  getPolicy(\n    billingAccountId: string,\n    options?: BillingAccountGetPolicyOptionalParams\n  ): Promise<BillingAccountGetPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, options },\n      getPolicyOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getPolicyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Subscription/policies/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BillingAccountPoliciesResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  SubscriptionsImpl,\n  TenantsImpl,\n  SubscriptionOperationsImpl,\n  OperationsImpl,\n  AliasImpl,\n  SubscriptionPolicyImpl,\n  BillingAccountImpl\n} from \"./operations\";\nimport {\n  Subscriptions,\n  Tenants,\n  SubscriptionOperations,\n  Operations,\n  Alias,\n  SubscriptionPolicy,\n  BillingAccount\n} from \"./operationsInterfaces\";\nimport { SubscriptionClientOptionalParams } from \"./models\";\n\nexport class SubscriptionClient extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the SubscriptionClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: SubscriptionClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: SubscriptionClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-subscriptions/5.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.subscriptions = new SubscriptionsImpl(this);\n    this.tenants = new TenantsImpl(this);\n    this.subscriptionOperations = new SubscriptionOperationsImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.alias = new AliasImpl(this);\n    this.subscriptionPolicy = new SubscriptionPolicyImpl(this);\n    this.billingAccount = new BillingAccountImpl(this);\n  }\n\n  subscriptions: Subscriptions;\n  tenants: Tenants;\n  subscriptionOperations: SubscriptionOperations;\n  operations: Operations;\n  alias: Alias;\n  subscriptionPolicy: SubscriptionPolicy;\n  billingAccount: BillingAccount;\n}\n"],"names":["KnownWorkload","KnownProvisioningState","KnownAcceptOwnership","KnownCreatedByType","KnownProvisioning","SubscriptionNameMapper","AcceptOwnershipRequestMapper","PutAliasRequestMapper","PutTenantPolicyRequestPropertiesMapper","__await","__asyncValues","__asyncDelegator","getOperationSpec","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.LocationListResult","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.accept","Mappers.Subscription","Mappers.SubscriptionListResult","Parameters.nextLink","Mappers.TenantListResult","__rest","__awaiter","LroEngine","Mappers.CanceledSubscriptionId","Mappers.ErrorResponseBody","Parameters.apiVersion1","Mappers.RenamedSubscriptionId","Parameters.body","Parameters.contentType","Mappers.EnabledSubscriptionId","Mappers.SubscriptionAcceptOwnershipHeaders","Parameters.body1","Mappers.AcceptOwnershipStatusResponse","Mappers.OperationListResult","Mappers.SubscriptionAliasResponse","Parameters.body2","Parameters.aliasName","Mappers.SubscriptionAliasListResult","Mappers.GetTenantPolicyResponse","Parameters.body3","Mappers.GetTenantPolicyListResponse","Mappers.BillingAccountPoliciesResponse","Parameters.billingAccountId","coreRestPipeline"],"mappings":"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"}