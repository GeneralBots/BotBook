import { Alias } from "../operationsInterfaces";
import { SubscriptionClient } from "../subscriptionClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { PutAliasRequest, AliasCreateOptionalParams, AliasCreateResponse, AliasGetOptionalParams, AliasGetResponse, AliasDeleteOptionalParams, AliasListOptionalParams, AliasListResponse } from "../models";
/** Class containing Alias operations. */
export declare class AliasImpl implements Alias {
    private readonly client;
    /**
     * Initialize a new instance of the class Alias class.
     * @param client Reference to the service client
     */
    constructor(client: SubscriptionClient);
    /**
     * Create Alias Subscription.
     * @param aliasName AliasName is the name for the subscription creation request. Note that this is not
     *                  the same as subscription name and this doesn’t have any other lifecycle need beyond the request for
     *                  subscription creation.
     * @param body The parameters required to create a new subscription.
     * @param options The options parameters.
     */
    beginCreate(aliasName: string, body: PutAliasRequest, options?: AliasCreateOptionalParams): Promise<PollerLike<PollOperationState<AliasCreateResponse>, AliasCreateResponse>>;
    /**
     * Create Alias Subscription.
     * @param aliasName AliasName is the name for the subscription creation request. Note that this is not
     *                  the same as subscription name and this doesn’t have any other lifecycle need beyond the request for
     *                  subscription creation.
     * @param body The parameters required to create a new subscription.
     * @param options The options parameters.
     */
    beginCreateAndWait(aliasName: string, body: PutAliasRequest, options?: AliasCreateOptionalParams): Promise<AliasCreateResponse>;
    /**
     * Get Alias Subscription.
     * @param aliasName AliasName is the name for the subscription creation request. Note that this is not
     *                  the same as subscription name and this doesn’t have any other lifecycle need beyond the request for
     *                  subscription creation.
     * @param options The options parameters.
     */
    get(aliasName: string, options?: AliasGetOptionalParams): Promise<AliasGetResponse>;
    /**
     * Delete Alias.
     * @param aliasName AliasName is the name for the subscription creation request. Note that this is not
     *                  the same as subscription name and this doesn’t have any other lifecycle need beyond the request for
     *                  subscription creation.
     * @param options The options parameters.
     */
    delete(aliasName: string, options?: AliasDeleteOptionalParams): Promise<void>;
    /**
     * List Alias Subscription.
     * @param options The options parameters.
     */
    list(options?: AliasListOptionalParams): Promise<AliasListResponse>;
}
//# sourceMappingURL=alias.d.ts.map